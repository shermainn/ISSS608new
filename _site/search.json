[
  {
    "objectID": "In-class_Ex/In-class_Ex02/In-class_Ex02.html",
    "href": "In-class_Ex/In-class_Ex02/In-class_Ex02.html",
    "title": "In-class_Ex02",
    "section": "",
    "text": "Recap:\n\n# add in the following to not have truncated words on figures into your Hands-on Exercises\n\n##| echo: false \n##| fig-height: 12\n##| fig-width: 7\n\n#ggtitle(stringr::str_wrap(\"This is a very long sentence and this should make it become two lines instead of it being cut off\"))  ## add this into your title in your ggplot"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html",
    "title": "Hands-on Exercise 2",
    "section": "",
    "text": "In this exercise, I will be learning on how to:\n\nControl the placement of annotation on a graph using functions provided in ggrepel package\nCreate professional publication quality figures using functions provided in ggthemes and hrbrthemes packages\nPlot composite figures by combining ggplot2 graphs using patchwork package"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#install-and-load-required-libraries",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#install-and-load-required-libraries",
    "title": "Hands-on Exercise 2",
    "section": "2.1. Install and Load required libraries",
    "text": "2.1. Install and Load required libraries\nCode chunk below is used to check if all 4 R packages (ggrepel, ggthemes, hrbrthemes & patchwork) are installed and loaded onto the environment.\n\npacman::p_load(ggrepel, patchwork, \n               ggthemes, hrbrthemes,\n               tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#import-data",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#import-data",
    "title": "Hands-on Exercise 2",
    "section": "2.2. Import data",
    "text": "2.2. Import data\n\nexam_data &lt;- read_csv(\"data/Exam_data.csv\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#notched-boxplot",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#notched-boxplot",
    "title": "Hands-on Exercise 2",
    "section": "7.1. Notched Boxplot",
    "text": "7.1. Notched Boxplot\nUsing Patchwork, I will using a notched boxplot to find the sample mean of the distribution of English scores and Math scores based on gender (female and male). From using the patchwork package, I am able to see the box-plot diagrams side by side which is much easier to make comparisons and the boxplot diagrams allow me to determine that the mean scores for Math between both genders are similar whereas for English scores, females have a higher mean score as compared to males. I added in ggtheme (theme_excel()) so that the diagram is visually more readable.\n\nNotched Boxplot of English and Math ScoresPatchwork of English and Math scores\n\n\n\nm1 &lt;- ggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_boxplot(notch=TRUE)\ne1 &lt;- ggplot(data=exam_data, \n       aes(y = ENGLISH, \n           x= GENDER)) +\n  geom_boxplot(notch=TRUE) \ne1#\n\n\n\n\n\n\n\n\n\n\n\npatchwork &lt;- m1 + e1 \npatchwork & theme_excel()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#violin-plot",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#violin-plot",
    "title": "Hands-on Exercise 2",
    "section": "7.2. Violin Plot",
    "text": "7.2. Violin Plot\nTo compare the different scores between English, Science and Math among the different students, I used a violin plot to compare them. To find out the number of students that scored a higher score of above 90, we will be using ggrepel to find out the number of students that score that.\n\nDefault violin plot by gender and subjectsStudents that scored more than 90 in each subject (using ggrepel)Patchwork of students that scored more than 90 in each subject\n\n\n\nexam_long &lt;- exam_data %&gt;%\n  pivot_longer(cols = c(ENGLISH, MATHS, SCIENCE),\n               names_to = \"Subject\",\n               values_to = \"Score\")\n\nggplot(exam_long, aes(x = Subject, y = Score, fill = Subject)) +\n  geom_violin(trim = FALSE, alpha = 0.7) +\n  geom_jitter(width = 0.1, alpha = 0.3, size = 1, color = \"black\") +\n  facet_wrap(~GENDER) +\n  labs(title = \"Score Distribution by Students\",\n       x = \"Subject\",\n       y = \"Score\") +\n  theme(legend.position = \"none\") \n\n\n\n\n\n\n\n\n\n\nFrom the results, it is seen that there are 17 students from each gender that scored more than 90 in Math but there are 5 students and 3 students that scored above 90 for English and Science respectively. It is also shown that there are more female students (4) who scored 90 as compared to male students (only 1) in English and there is more male students (2) that scored more than 90 in Science as compared to female students (only 1).\n\nexam_long &lt;- exam_data %&gt;%\n  pivot_longer(cols = c(ENGLISH),\n               names_to = \"Subject\",\n               values_to = \"Score\")\n\n\nhighlight_data &lt;- exam_long %&gt;%\n  filter(Score &gt; 90)\n\ne2 &lt;- ggplot(exam_long, aes(x = Subject, y = Score, fill = GENDER)) +\n  geom_violin(trim = FALSE, alpha = 0.7, position = position_dodge(width = 0.9)) +\n  geom_jitter(\n    aes(color = GENDER),\n    alpha = 0.3,\n    size = 1,\n    position = position_jitterdodge(jitter.width = 0.15, dodge.width = 0.9)\n  )  +\n\n  # Add ggrepel labels for top scorers\n  geom_label_repel(\n    data = highlight_data,\n    aes(label = ID, color = GENDER),\n    position = position_jitterdodge(jitter.width = 0.15, dodge.width = 0.9),\n    fontface = \"bold\",\n    size = 3,\n    box.padding = 0.4,\n    label.padding = 0.3,     # Padding inside the box\n    label.size = 0.3,        # Thickness of the box border\n    fill = \"white\",          # Background color of the label\n    max.overlaps = 60,\n    show.legend = FALSE\n  ) +\n  labs(\n    title = \"English Scores based on Gender\",\n    subtitle = \"Labels for students who scored above 90\",\n    x = \"Subject\",\n    y = \"Score\"\n  ) \ne2#\n\n\n\n\n\n\n\n\n\nexam_long &lt;- exam_data %&gt;%\n  pivot_longer(cols = c(MATHS),\n               names_to = \"Subject\",\n               values_to = \"Score\")\n\n\nhighlight_data &lt;- exam_long %&gt;%\n  filter(Score &gt; 90)\n\nm2 &lt;- ggplot(exam_long, aes(x = Subject, y = Score, fill = GENDER)) +\n  geom_violin(trim = FALSE, alpha = 0.7, position = position_dodge(width = 0.9)) +\n  geom_jitter(\n    aes(color = GENDER),\n    alpha = 0.3,\n    size = 1,\n    position = position_jitterdodge(jitter.width = 0.15, dodge.width = 0.9)\n  )  +\n\n  # Add ggrepel labels for top scorers\n  geom_label_repel(\n    data = highlight_data,\n    aes(label = ID, color = GENDER),\n    position = position_jitterdodge(jitter.width = 0.15, dodge.width = 0.9),\n    fontface = \"bold\",\n    size = 3,\n    box.padding = 0.4,\n    label.padding = 0.3,     # Padding inside the box\n    label.size = 0.3,        # Thickness of the box border\n    fill = \"white\",          # Background color of the label\n    max.overlaps = 60,\n    show.legend = FALSE\n  ) +\n  labs(\n    title = \"Math Scores based on Gender\",\n    subtitle = \"Labels for students who scored above 90\",\n    x = \"Subject\",\n    y = \"Score\"\n  ) \nm2#\n\n\n\n\n\n\n\n\n\nexam_long &lt;- exam_data %&gt;%\n  pivot_longer(cols = c(SCIENCE),\n               names_to = \"Subject\",\n               values_to = \"Score\")\n\n\nhighlight_data &lt;- exam_long %&gt;%\n  filter(Score &gt; 90)\n\ns2 &lt;- ggplot(exam_long, aes(x = Subject, y = Score, fill = GENDER)) +\n  geom_violin(trim = FALSE, alpha = 0.7, position = position_dodge(width = 0.9)) +\n  geom_jitter(\n    aes(color = GENDER),\n    alpha = 0.3,\n    size = 1,\n    position = position_jitterdodge(jitter.width = 0.15, dodge.width = 0.9)\n  )  +\n\n  # Add ggrepel labels for top scorers\n  geom_label_repel(\n    data = highlight_data,\n    aes(label = ID, color = GENDER),\n    position = position_jitterdodge(jitter.width = 0.15, dodge.width = 0.9),\n    fontface = \"bold\",\n    size = 3,\n    box.padding = 0.4,\n    label.padding = 0.3,     # Padding inside the box\n    label.size = 0.3,        # Thickness of the box border\n    fill = \"white\",          # Background color of the label\n    max.overlaps = 60,\n    show.legend = FALSE\n  ) +\n  labs(\n    title = \"Science Scores based on Gender\",\n    subtitle = \"Labels for students who scored above 90\",\n    x = \"Subject\",\n    y = \"Score\"\n  ) \ns2#\n\n\n\n\n\n\n\n\n\n\n\n#|fig-width: 15\n#|fig-height: 7\n#|echo: false\n((s2 / e2) |  m2)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#dot-plot",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#dot-plot",
    "title": "Hands-on Exercise 2",
    "section": "7.3. Dot Plot",
    "text": "7.3. Dot Plot\nI will be plotting a dot plot to compare the results between the female and male students who scored well (above 80) in English and Math. Based on using the + sign patchworkpackage, I am able to clearly see the number of students that scored above 80 and based on the figure, it can be observed that Math has more students that scored above 80. The number of dots represent the number of students that scored above 80 for each subject respectively.\n\nDefault Dot Plotspatchwork (using + sign)\n\n\n\nhigh_english &lt;- exam_data[exam_data$ENGLISH &gt; 80, ]\ne3 &lt;- ggplot(high_english, aes(x = GENDER, y = ENGLISH)) +\n  geom_dotplot(\n    binaxis = 'y', \n    stackdir = 'center', \n    dotsize = 0.7, \n    binwidth = 1) +\n  labs(title = \"Students Scoring Above 80\",\n       x = \"Gender\",\n       y = \"English Score\") +\n  theme_excel()\ne3#\n\n\n\n\n\n\n\n\n\nhigh_math &lt;- exam_data[exam_data$MATHS &gt; 80, ]\nm3 &lt;- ggplot(high_math, aes(x = GENDER, y = MATHS)) +\n  geom_dotplot(\n    binaxis = 'y', \n    stackdir = 'center', \n    dotsize = 0.7, \n    binwidth = 1) +\n  labs(title = \"Students Scoring Above 80\",\n       x = \"Gender\",\n       y = \"Math Score\") +\n  theme_excel()\nm3#\n\n\n\n\n\n\n\n\n\n\n\ne3 + m3"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#pie-chart-and-bar-chart",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#pie-chart-and-bar-chart",
    "title": "Hands-on Exercise 2",
    "section": "7.4. Pie Chart and Bar Chart",
    "text": "7.4. Pie Chart and Bar Chart\n\nPie Chart: Number of Students based on Gender for EnglishBar Chart: Average English Score by GenderPatchwork (using “/”,“|”,“()” to combine 3 plots)Patchwork (using insert): English score by Gender\n\n\n\ngender_counts &lt;- exam_data %&gt;%\n  group_by(GENDER) %&gt;%\n  summarise(Count = n())\n\np1 &lt;- ggplot(gender_counts, aes(x = \"\", y = Count, fill = GENDER)) +\n  geom_bar(stat = \"identity\", width = 1) +\n  coord_polar(theta = \"y\") +  # This transforms the bar chart to a pie chart\n  theme_void() +  # Removes axes and background\n  labs(title = \"Number of Students in English\") +\n  theme(\n    plot.title = element_text(size = 9),\n    plot.background = element_rect(fill = \"white\")\n  )\np1#\n\n\n\n\n\n\n\n\n\n\n\navg_english &lt;- exam_data %&gt;%\n  group_by(GENDER) %&gt;%\n  summarise(Avg_English = mean(ENGLISH))\n\n# Plot\na1 &lt;- ggplot(avg_english, aes(x = GENDER, y = Avg_English)) +\n  geom_bar(stat = \"identity\") +\n  labs(title = \"Average English Score by Gender\",\n       x = \"Gender\",\n       y = \"Average Score\") +\n  theme_excel()\na1#\n\n\n\n\n\n\n\n\n\navg_maths &lt;- exam_data %&gt;%\n  group_by(GENDER) %&gt;%\n  summarise(Avg_Maths = mean(MATHS))\n\n# Plot\na2 &lt;- ggplot(avg_maths, aes(x = GENDER, y = Avg_Maths)) +\n  geom_bar(stat = \"identity\") +\n  labs(title = \"Average Maths Score by Gender\",\n       x = \"Gender\",\n       y = \"Average Score\") +\n  theme_excel()\na2#\n\n\n\n\n\n\n\n\n\navg_science &lt;- exam_data %&gt;%\n  group_by(GENDER) %&gt;%\n  summarise(Avg_Science = mean(SCIENCE))\n\n# Plot\na3 &lt;- ggplot(avg_science, aes(x = GENDER, y = Avg_Science)) +\n  geom_bar(stat = \"identity\") +\n  labs(title = \"Average Science Score by Gender\",\n       x = \"Gender\",\n       y = \"Average Score\") +\n  theme_excel()\na3#\n\n\n\n\n\n\n\n\n\n\n\na1/a2|a3\n\n\n\n\n\n\n\n\n\n\n\na1 + inset_element(p1, \n                   left = 0.7,    \n                   bottom = 0,    \n                   right = 1,     \n                   top = 0.3)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#raincloud-plot",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#raincloud-plot",
    "title": "Hands-on Exercise 2",
    "section": "7.5. Raincloud Plot",
    "text": "7.5. Raincloud Plot"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#diverging-stacked-bar-chart",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#diverging-stacked-bar-chart",
    "title": "Hands-on Exercise 2",
    "section": "7.6. Diverging Stacked Bar Chart",
    "text": "7.6. Diverging Stacked Bar Chart"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#packed-bars",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#packed-bars",
    "title": "Hands-on Exercise 2",
    "section": "7.7. Packed Bars",
    "text": "7.7. Packed Bars"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "Hi! My Name is Shermainn and I am a Masters’ degree student from Singapore Management University in IT Business majoring in Financial Technology and Analytics. I love trying new foods and travelling to new places."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html",
    "title": "Hands-on Exercise 1",
    "section": "",
    "text": "The code chunk below uses p_load() of pacman package to check if tidyverse packages are installed in the computer. If they are, then they will be launched into R.\n\npacman::p_load(tidyverse)\n\n\n\n\n\nexam_data &lt;- read_csv(\"data/Exam_data.csv\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#install-and-launch-r-packages",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#install-and-launch-r-packages",
    "title": "Hands-on Exercise 1",
    "section": "",
    "text": "The code chunk below uses p_load() of pacman package to check if tidyverse packages are installed in the computer. If they are, then they will be launched into R.\n\npacman::p_load(tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#importing-the-data",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#importing-the-data",
    "title": "Hands-on Exercise 1",
    "section": "",
    "text": "exam_data &lt;- read_csv(\"data/Exam_data.csv\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html",
    "title": "Hands-on_Ex03",
    "section": "",
    "text": "I will be learning how to create interactive data visualization by using functions provided by ggiraph and plotlyr packages.\nI will also be learning how to create animated data visualization by using gganimate and plotly r packages. In addition, I will be able to reshape data using tidyr package, and (ii) process, wrangle and transform data by using dplyr package."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#install-launch-r-packages",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#install-launch-r-packages",
    "title": "Hands-on_Ex03",
    "section": "1.1.1. Install & Launch R packages",
    "text": "1.1.1. Install & Launch R packages\nInstall and Launch the following R packages:\n\nggiraph for making ‘ggplot’ graphics interactive.\nplotly, R library for plotting interactive statistical graphs.\nDT provides an R interface to the JavaScript library DataTables that create interactive table on html page.\ntidyverse, a family of modern R packages specially designed to support data science, analysis and communication task including creating static statistical graphs.\npatchwork for combining multiple ggplot2 graphs into one figure.\n\n\npacman::p_load(ggiraph, plotly, \n               patchwork, DT, tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#import-data",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#import-data",
    "title": "Hands-on_Ex03",
    "section": "1.1.2. Import Data",
    "text": "1.1.2. Import Data\nThe code chunk below read_csv() of readr package will import the Exam_data.csv and save as exam_data as a tibble data frame.\n\nexam_data &lt;- read_csv(\"data/Exam_data.csv\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#install-and-launch-r-packages",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#install-and-launch-r-packages",
    "title": "Hands-on_Ex03",
    "section": "1.2.1. Install and launch R packages",
    "text": "1.2.1. Install and launch R packages\nInstall and Launch the following R packages:\n\nplotly, R library for plotting interactive statistical graphs.\ngganimate, an ggplot extension for creating animated statistical graphs.\ngifski converts video frames to GIF animations using pngquant’s fancy features for efficient cross-frame palettes and temporal dithering. It produces animated GIFs that use thousands of colors per frame.\ngapminder: An excerpt of the data available at Gapminder.org. We just want to use its country_colors scheme.\ntidyverse, a family of modern R packages specially designed to support data science, analysis and communication task including creating static statistical graphs.\n\n\npacman::p_load(readxl, gifski, gapminder,\n               plotly, gganimate, tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#import-data-1",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#import-data-1",
    "title": "Hands-on_Ex03",
    "section": "1.2.2 Import Data",
    "text": "1.2.2 Import Data\nImport data worksheet from GlobalPopulation Excel workbook.\n\ncol &lt;- c(\"Country\", \"Continent\")\nglobalPop &lt;- read_xls(\"data/GlobalPopulation.xls\", sheet=\"Data\")%&gt;%\n  mutate_each_(funs(factor(.)), col) %&gt;%\n  mutate(Year = as.integer(Year))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#ggiraph-methods",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#ggiraph-methods",
    "title": "Hands-on_Ex03",
    "section": "2.1.1 ggiraph Methods",
    "text": "2.1.1 ggiraph Methods\n\nTooltip: a column of datasets that contain tooltips to be displayed when the mouse is over elements\nData_id: a column of datasets that contain an id to be associated with elements.\nOnclick: a column of datasets that contain JavaScript function to be executed when elements are clicked.\n\n\n2.1.1.1 Tooltip effect\nThere are two steps that are needed (Step 1 and 2),\n\nInteractive version of ggplot2 is used to create the basic graph\ngirafe() is then utilized to generate an svg object to be displayed on an html page\nCustomize tooltip style\nDisplay statistics on tooltip\n\n\nStep 1: Basic graphStep 2: Add in tooltip effectStep 3: Customization tooltip styleStep 4: Statistics using tooltip\n\n\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = ID),\n    stackgroups = TRUE, \n    binwidth = 1, \n    method = \"histodot\") +\n  scale_y_continuous(NULL, \n                     breaks = NULL)\np#\n\n\n\n\n\n\n\n\n\n\nBy using the tooltip effect, there is interactivity by hovering the mouse pointer on an data point of interest where the information listed such as the student’s ID will be displayed.\nWe are able to display multiple information such as Name, Class, Race and Gender on tooltip as shown in the code chunk below.\n\nexam_data$tooltip &lt;- c(paste0(\"Name =\", exam_data$ID, \"\\n Class =\", exam_data$CLASS, \"\\n Race =\", exam_data$RACE, \"\\n Gender =\", exam_data$GENDER))\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = exam_data$tooltip), \n    stackgroups = TRUE,\n    binwidth = 1,\n    method = \"histodot\") +\n  scale_y_continuous(NULL,          \n                     breaks = NULL)\n\ngirafe(\n  ggobj = p,\n  width_svg = 6,\n  height_svg = 6*0.618\n)\n\n\n\n\n\n\n\nOne example uses opts_tooltip() of ggiraph by adding in css declarations such as changing the background and font colours.\n\ntooltip_css &lt;- \"background-color:white; #&lt;&lt;\nfont-style:bold; color:black;\" #&lt;&lt;\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(         \n    aes(tooltip = ID),              \n    stackgroups = TRUE,             \n    binwidth = 1,                   \n    method = \"histodot\") +          \n  scale_y_continuous(NULL, breaks = NULL)\n\ngirafe(                             \n  ggobj = p,                        \n  width_svg = 6,                    \n  height_svg = 6*0.618,\n  options = list(    #&lt;&lt;\n    opts_tooltip(    #&lt;&lt;\n      css = tooltip_css)) #&lt;&lt;\n)                               \n\n\n\n\n\n\n\nStatistics such as the 90% confident interval of the mean can be computed and displayed as shown in the code chunk below.\n\ntooltip &lt;- function(y, ymax, accuracy = .01) {\n  mean &lt;- scales::number(y, accuracy = accuracy)\n  sem &lt;- scales::number(ymax - y, accuracy = accuracy)\n  paste(\"Mean maths scores:\", mean, \"+/-\", sem)\n}\n\ngg_point &lt;- ggplot(data=exam_data, \n                   aes(x = RACE),\n) +\n  stat_summary(aes(y = MATHS, \n                   tooltip = after_stat(  \n                     tooltip(y, ymax))),  \n    fun.data = \"mean_se\", \n    geom = GeomInteractiveCol,  \n    fill = \"light blue\"\n  ) +\n  stat_summary(aes(y = MATHS),\n    fun.data = mean_se,\n    geom = \"errorbar\", width = 0.2, size = 0.2\n  )\n\ngirafe(ggobj = gg_point,\n       width_svg = 8,\n       height_svg = 8*0.618)\n\n\n\n\n\n\n\n\n\n\n2.1.1.2 data_id aesthetic\nThe code chunk below shows the hover effect that data_id can shown as one of the interactive features of ggiraph.\n\nDefaultHover effectStyling hover effect (Change highlighted effect)Combination tooltip & hover effect\n\n\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = ID),\n    stackgroups = TRUE, \n    binwidth = 1, \n    method = \"histodot\") +\n  scale_y_continuous(NULL, \n                     breaks = NULL)\ngirafe(                                 \n  ggobj = p,                            \n  width_svg = 6,                        \n  height_svg = 6*0.618                  \n)  \n\n\n\n\n\n\n\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(           \n    aes(data_id = CLASS),   #default value of hover css fill is orange          \n    stackgroups = TRUE,               \n    binwidth = 1,                       \n    method = \"histodot\") +              \n  scale_y_continuous(NULL,              \n                     breaks = NULL)\n\ngirafe(                                 \n  ggobj = p,                            \n  width_svg = 6,                        \n  height_svg = 6*0.618                  \n)                                        \n\n\n\n\n\n\n\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(             \n    aes(data_id = CLASS),              \n    stackgroups = TRUE,                 \n    binwidth = 1,                       \n    method = \"histodot\") +              \n  scale_y_continuous(NULL,              \n                     breaks = NULL)\n\ngirafe(                                 \n  ggobj = p,                            \n  width_svg = 6,                        \n  height_svg = 6*0.618,\n  options = list(                       \n    opts_hover(css = \"fill: #202020;\"), \n    opts_hover_inv(css = \"opacity:0.2;\")\n  )                                     \n)                                        \n\n\n\n\n\n\n\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(         \n    aes(tooltip = CLASS, \n        data_id = CLASS),           \n    stackgroups = TRUE,             \n    binwidth = 1,                   \n    method = \"histodot\") +          \n  scale_y_continuous(NULL,          \n                     breaks = NULL)\n\ngirafe(                             \n  ggobj = p,                        \n  width_svg = 6,                    \n  height_svg = 6*0.618,\n  options = list(                   \n    opts_hover(css = \"fill: #202020;\"),  \n    opts_hover_inv(css = \"opacity:0.2;\") \n  )                                 \n)                                   \n\n\n\n\n\n\n\n\n\n\n2.1.1.3 Onclick\nThis provides hotlink interactivity on the web when using the onclick argument of ggiraph where there is a web document link with a data object displayed on the top right hand corner of the figure upon mouse click.\n\nexam_data$onclick &lt;- sprintf(\"window.open(\\\"%s%s\\\")\",\n\"https://www.moe.gov.sg/schoolfinder?journey=Primary%20school\",\nas.character(exam_data$ID))\n\n## click actions need to be a \"str\" column containing javascript instructions\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(             \n    aes(onclick = onclick),             \n    stackgroups = TRUE,                 \n    binwidth = 1,                       \n    method = \"histodot\") +              \n  scale_y_continuous(NULL,              \n                     breaks = NULL)\n\ngirafe(                                 \n  ggobj = p,                            \n  width_svg = 6,                        \n  height_svg = 6*0.618)                                        \n\n\n\n\n\n\n\n2.1.1.4 Coordinated Multiple Views with ggiraph\n\nUse interactive functions of ggiraph such as data_id aesthetic to link observations and tooltip aesthetic to hover over a point with a mouse\nCombine it with patchwork learned in Hands-on Exercise 2\n\n\np1 &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(data_id = ID),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +  \n  coord_cartesian(xlim=c(0,100)) + \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\n\np2 &lt;- ggplot(data=exam_data, \n       aes(x = ENGLISH)) +\n  geom_dotplot_interactive(              \n    aes(data_id = ID),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") + \n  coord_cartesian(xlim=c(0,100)) + \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\n\ngirafe(code = print(p1 + p2), \n       width_svg = 6,\n       height_svg = 3,\n       options = list(\n         opts_hover(css = \"fill: #202020;\"),\n         opts_hover_inv(css = \"opacity:0.2;\")\n         )\n       )"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#plotly-methods",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#plotly-methods",
    "title": "Hands-on_Ex03",
    "section": "2.1.2 plotly Methods",
    "text": "2.1.2 plotly Methods\nThere are two ways to use plotly:\n\nusing plot_ly()\nusing ggploty()\n\n\nCreate an interactive plot: plot_ly()Create an interactive plot: ggplotly()\n\n\n\nplot_ly(data = exam_data, \n             x = ~MATHS, \n             y = ~GENDER,\n            colour = ~RACE)\n\n\n\n\n\n\n\nFrom using the functions subplot() and highlight_key(), I am able to compare results of students’ scores for Math, Science and English. I am also able to pinpoint any student by click on a data point of any one of the scatterplots to see the students’ scores.\n\nhightlight_key() is used to share data and creates an object of class crosstalk\nsubplot() helps to place plots side by side\n\n\nd &lt;- highlight_key(exam_data)\n\np1 &lt;- ggplot(data=d,\n            aes(x = ENGLISH,\n                y = SCIENCE)) +\n  geom_point(size=1) + \n  coord_cartesian(xlim=c(0,100), \n                  ylim=c(0,100))\np2 &lt;- ggplot(data=d, \n             aes(x = ENGLISH,\n                y = MATHS)) +\n      geom_point(size=1) +\n      coord_cartesian(xlim=c(0,100), \n                  ylim=c(0,100))\n\nsubplot(ggplotly(p1),\n        ggplotly(p2))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#crosstalk-methods",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#crosstalk-methods",
    "title": "Hands-on_Ex03",
    "section": "2.1.3 crosstalk Methods",
    "text": "2.1.3 crosstalk Methods\nCrosstalk is an add-on to the htmlwidgets package. It extends htmlwidgets with a set of classes, functions and conventions for implementing cross-widgets interactions (currently, linked brushing and filtering). ::: panel-tabset ### 2.1.3.1 Interactive Data Table: DT package\n\nA wrapper of JavaScript Library DataTables\nData objects in R can be rendered as HTML tables using JavaScript library “DataTables” via R Markdown or Shiny.\n\n\nDT::datatable(exam_data, class = \"compact\")\n\n\n\n\n\n\n2.1.3.2 Linked brushing\nCode chunk below is used to implement the coordinated brushing.\n\nhighlight() sets a variety of options for brushing (i.e. highlight) multiple plots. It is primarily designed to link multiple plotly graphs together and may not behaved as expected when linking plotly to another htmlwidget package via crosstalk. Some cases such as persistent selection in leaflet, other htmlwidgets will respect the options.\nbscols() is a helper function of crosstalk by putting HTML elements next to each other. It can be called directly from the console but is designed specifically for R Markdown.\n\n\nd &lt;- highlight_key(exam_data)\n\np &lt;- ggplot(d, \n            aes(ENGLISH, MATHS)) +\n    geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\n\ngg &lt;- highlight(ggplotly(p), \n                \"plotly_selected\")\n\ncrosstalk::bscols(gg, DT::datatable(d), widths = 5)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n:::"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#terminology",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#terminology",
    "title": "Hands-on_Ex03",
    "section": "3.1 Terminology",
    "text": "3.1 Terminology\nFrom this visualization type, we need to understand some key concepts and terminology used in this type of visualization.\n\nFrame: In an animated line graph, each frame represents a different point in time or a different category. When the frame changes, the data points on the graph are updated to reflect the new data.\nAnimation Attributes: The animation attributes are the settings that control how the animation behaves. For example, you can specify the duration of each frame, the easing function used to transition between frames, and whether to start the animation from the current frame or from the beginning."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#gganimate-methods",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#gganimate-methods",
    "title": "Hands-on_Ex03",
    "section": "3.2 gganimate Methods",
    "text": "3.2 gganimate Methods\ngganimate brings your static ggplot2 plots to life, turning them into animations. Some key components to note are explained simply below:\nImagine you’re animating a bouncing ball with ggplot2:\n\ntransition_time() decides when and where the ball moves (frame by frame).\nview_follow() makes the camera follow the ball.\nshadow_mark() shows the ball’s trail as it bounces.\nenter_bounce() makes the ball bounce into view.\nease_aes() makes the motion look smooth and natural — not robotic.\n\n\n3.2.1 Static bubble plots\n\ntransition_time() of gganimate is used to create transition through distinct states in time (i.e. Year).\nease_aes() is used to control easing of aesthetics. The default is linear. Other methods are: quadratic, cubic, quartic, quintic, sine, circular, exponential, elastic, back, and bounce.\n\n\nDefault static bubble plotAnimated bubble plot\n\n\n\nggplot(globalPop, aes(x = Old, y = Young, \n                      size = Population, \n                      colour = Country)) +\n  geom_point(alpha = 0.7, \n             show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(title = 'Year: {frame_time}', \n       x = '% Aged', \n       y = '% Young') \n\n\n\n\n\n\n\n\n\n\n\nggplot(globalPop, aes(x = Old, y = Young, \n                      size = Population, \n                      colour = Country)) +\n  geom_point(alpha = 0.7, \n             show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(title = 'Year: {frame_time}', \n       x = '% Aged', \n       y = '% Young') +\n  transition_time(Year) +       \n  ease_aes('linear')          \n\n\n\n\n\n\n\n\n\n\n\n\n\n3.2.2 plotly Methods\nIn Plotly R package, both ggplotly() and plot_ly() support key frame animations through the frame argument/aesthetic. They also support an ids argument/aesthetic to ensure smooth transitions between objects with the same id (which helps facilitate object constancy).\n\nggplotly() animated (legend shown)ggplotly() animated (legend not shown)plot_ly()\n\n\n\ngg &lt;- ggplot(globalPop, \n       aes(x = Old, \n           y = Young, \n           size = Population, \n           colour = Country)) +\n  geom_point(alpha = 0.7) + ## aes(frame & size) not working w ggplot anymore\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(x = '% Aged', \n       y = '% Young')\n\nggplotly(gg)\n\n\n\n\n\n\n\n\ngg &lt;- ggplot(globalPop, \n       aes(x = Old, \n           y = Young, \n           size = Population, \n           colour = Country)) +\n  geom_point(alpha = 0.7) + # aes(size = Population, frame = Year) not working\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(x = '% Aged', \n       y = '% Young') + \n  theme(legend.position='none') #removes legend\n\nggplotly(gg)\n\n\n\n\n\n\n\n\nbp &lt;- globalPop %&gt;%\n  plot_ly(x = ~Old, \n          y = ~Young, \n          size = ~Population, \n          color = ~Continent,\n          sizes = c(2, 100),\n          frame = ~Year, \n          text = ~Country, \n          hoverinfo = \"text\",\n          type = 'scatter',\n          mode = 'markers'\n          ) %&gt;%\n  layout(showlegend = FALSE)\nbp"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "ISSS608new",
    "section": "",
    "text": "Welcome to ISSS608 Visual Analytics and Applications. In this website, you will find my coursework prepared for this course."
  },
  {
    "objectID": "index.html#latest-hands-on-exercise",
    "href": "index.html#latest-hands-on-exercise",
    "title": "ISSS608new",
    "section": "🔥 Latest Hands-on Exercise",
    "text": "🔥 Latest Hands-on Exercise\n\n\n\n\n\n\n\nHandsOnEx3\n\n\nHands-on Exercise 3\n\n\n\nShermainn"
  },
  {
    "objectID": "index.html#latest-take-home-exercise",
    "href": "index.html#latest-take-home-exercise",
    "title": "ISSS608new",
    "section": "🔥 Latest Take-home Exercise",
    "text": "🔥 Latest Take-home Exercise\n\n\n\n\n\n\n\nTakehomeEx01\n\n\nTake-home Exercise 1\n\n\n\nShermainn"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html",
    "title": "Take-home_Ex01",
    "section": "",
    "text": "The Department of Statistics (DOS) Singapore is the national authority responsible for the collection, compilation, analysis and dissemination of official statistics in Singapore. As part of the Ministry of Trade and Industry, DOS plays a pivotal role in supporting evidence-based policy-making and planning by providing timely and reliable demographic, social and economic statistics.\nIn the context of population studies, DOS regularly published detailed data sets that inform stakeholders on trends in age structure, gender distribution, geographical dispersion and population growth. This would help to analyze population structures, identifying spatial disparities and tracking demographic shifts across time and regions.\nThe DOS data set taken in 2024 consisted resident population (age and sex) of the planning regions based on the main area and sub-zones.\n\n\n\nThe data used for this exercise is Singapore Residents by Planning Area / Subzone, Single Year of Age and Sex, June 2024 which can be retrieved from Department of Statistics, Singapore (DOS) Population Trends tab.\n\n\n\nImage of DOS data\n\n\nSupplementary materials used complementary with data set:\n\nFacilities of\n\n\n\n\nAs a graphical editor of the media company, the task is to prepare data visualization for the article on demographic structures and distribution of Singapore in 2024.\nUsing the DOS data set above, this post aims to use appropriate tidyverse family of packages (dplr, tidyr), exploratory data analysis (EDA) and ggplot2 functions and its extensions to uncover:\n\nDependency Burden: the regions that have a high dependency ratio (high proportion of young and elderly) to find out if there are sufficient facilities (e.g. childcare centers and eldercare facilities)\nUrban Planning and Housing Needs: the aging communities in Singapore based on the geographical regions using the subzone-level data"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#background",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#background",
    "title": "Take-home_Ex01",
    "section": "",
    "text": "The Department of Statistics (DOS) Singapore is the national authority responsible for the collection, compilation, analysis and dissemination of official statistics in Singapore. As part of the Ministry of Trade and Industry, DOS plays a pivotal role in supporting evidence-based policy-making and planning by providing timely and reliable demographic, social and economic statistics.\nIn the context of population studies, DOS regularly published detailed data sets that inform stakeholders on trends in age structure, gender distribution, geographical dispersion and population growth. This would help to analyze population structures, identifying spatial disparities and tracking demographic shifts across time and regions.\nThe DOS data set taken in 2024 consisted resident population (age and sex) of the planning regions based on the main area and sub-zones."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#data",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#data",
    "title": "Take-home_Ex01",
    "section": "",
    "text": "The data used for this exercise is Singapore Residents by Planning Area / Subzone, Single Year of Age and Sex, June 2024 which can be retrieved from Department of Statistics, Singapore (DOS) Population Trends tab.\n\n\n\nImage of DOS data\n\n\nSupplementary materials used complementary with data set:\n\nFacilities of"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#task",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#task",
    "title": "Take-home_Ex01",
    "section": "",
    "text": "As a graphical editor of the media company, the task is to prepare data visualization for the article on demographic structures and distribution of Singapore in 2024.\nUsing the DOS data set above, this post aims to use appropriate tidyverse family of packages (dplr, tidyr), exploratory data analysis (EDA) and ggplot2 functions and its extensions to uncover:\n\nDependency Burden: the regions that have a high dependency ratio (high proportion of young and elderly) to find out if there are sufficient facilities (e.g. childcare centers and eldercare facilities)\nUrban Planning and Housing Needs: the aging communities in Singapore based on the geographical regions using the subzone-level data"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#variable-selection",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#variable-selection",
    "title": "Take-home_Ex01",
    "section": "4.1 Variable Selection",
    "text": "4.1 Variable Selection\nBased on the excel spreadsheet, Singapore Residents by Planning Area / Subzone, Single Year of Age and Sex, June 2024, I will be categorizing the data set into what was shown above in the flowchart. The ages of the population will be divided into 3 categories: Young (0-17 years), Working adults (18-64), Elderly (65+). The genders will be divided into female and male. As for the planning areas, there are 55 planning areas (main zones) and 346 subzones.\nBelow are the list of variables retained for this study which are grouped into 2 categories of Age and Planning areas.\n\n\n\n\n\n\n\n\n\nCategory\nDescription\nType\nEncoding Scheme\n\n\n\n\nAge\nDependency Burden\nNUM\nYoung (0-17)\nWorking Adults (18-64)\nElderly (65+)\n\n\nPlanning areas\nUrban Planning and Housing Needs\nNUM\nMain zones\nSubzones"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#handling-of-missing-values",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#handling-of-missing-values",
    "title": "Take-home_Ex01",
    "section": "4.2 Handling of missing values",
    "text": "4.2 Handling of missing values"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#recoding-categorical-variables",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#recoding-categorical-variables",
    "title": "Take-home_Ex01",
    "section": "4.2 Recoding Categorical Variables",
    "text": "4.2 Recoding Categorical Variables\n\nAge groupsMain zones and subzones\n\n\nIn order to have a consistent data set to analyze the population age groups, data is cleaned by filter() to set new values into 3 age groups:\n\nYoung of 0 - 17 years\nWorking Adults of 18 - 64 years\nand Elderly of 65 years and above\n\nThe values are all within the new column namely Age_Group.\n\n\nThe data set is then further categorized by main zones and subzones by using filter()to remove the totals in columns of Age, Sex, Subzone and ‘-’ in Population as they are repeated values or null values. The values are then all renamed Planning_Area, Subzone, and Total_Population.\n\nlibrary(readxl)\nlibrary(dplyr)\n\n# Load the data\npopdata &lt;- read_excel(\"C:\\\\shermainn\\\\ISSS608new\\\\Take-home_Ex\\\\Take-home_Ex01\\\\data\\\\respopagesex2024e.xlsx\")\n\n# Clean and process\npopdata_cleaned &lt;- popdata %&gt;%\n  rename(\n    Planning_Area = `Planning Area`,\n    Population = `2024`\n  ) %&gt;%\n  filter(Sex != \"Total\", Age != \"Total\", Subzone != \"Total\") %&gt;%\n  mutate(\n    Population = na_if(Population, \"-\"),            \n    Age = as.numeric(Age),\n    Population = as.numeric(Population),\n    Age_Group = case_when(\n      Age &gt;= 0 & Age &lt;= 17 ~ \"Young (0-17)\",\n      Age &gt;= 18 & Age &lt;= 64 ~ \"Working Adults (18-64)\",\n      Age &gt;= 65 ~ \"Elderly (65+)\",\n      TRUE ~ NA_character_\n    )\n  ) %&gt;%\n  filter(!is.na(Age_Group)) %&gt;%\n  group_by(Planning_Area, Subzone, Age_Group) %&gt;%\n  summarise(Total_Population = sum(Population, na.rm = TRUE), .groups = \"drop\")\n\n# View results\nhead(popdata_cleaned)\n\n# A tibble: 6 × 4\n  Planning_Area Subzone                Age_Group              Total_Population\n  &lt;chr&gt;         &lt;chr&gt;                  &lt;chr&gt;                             &lt;dbl&gt;\n1 Ang Mo Kio    Ang Mo Kio Town Centre Elderly (65+)                       880\n2 Ang Mo Kio    Ang Mo Kio Town Centre Working Adults (18-64)             3170\n3 Ang Mo Kio    Ang Mo Kio Town Centre Young (0-17)                        830\n4 Ang Mo Kio    Cheng San              Elderly (65+)                      6580\n5 Ang Mo Kio    Cheng San              Working Adults (18-64)            16940\n6 Ang Mo Kio    Cheng San              Young (0-17)                       3350"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#data-type-conversion",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#data-type-conversion",
    "title": "Take-home_Ex01",
    "section": "4.4 Data Type Conversion",
    "text": "4.4 Data Type Conversion"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#variable-creation",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#variable-creation",
    "title": "Take-home_Ex01",
    "section": "4.5 Variable Creation",
    "text": "4.5 Variable Creation"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#target-variables",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#target-variables",
    "title": "Take-home_Ex01",
    "section": "5.1 Target Variables",
    "text": "5.1 Target Variables"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#comparison-distribution",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#comparison-distribution",
    "title": "Take-home_Ex01",
    "section": "6.1 Comparison distribution",
    "text": "6.1 Comparison distribution"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#top-10-subzones",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#top-10-subzones",
    "title": "Take-home_Ex01",
    "section": "5.1 Top 10 subzones",
    "text": "5.1 Top 10 subzones\nIdentifying the top 10 subzones for each population group is paramount for informed urban planning and resource allocation. By understanding the demographic concentrations and where they are located at would help the government agencies, planners and social service providers to allocate infrastructure, facilities and services for efficiently and effectively.\nFor instance, subzones with a high elderly proportion would require more eldercare services, accesible transportation and healthcare centers. On the other hand, areas with many children would need sufficient childcare centers, schools and recreational amenities.\n\nElderly (65+)Young (0-17)Working Adults (18-64)Comparison between the 3 groups (using patchwork)\n\n\n\nlibrary(ggplot2)\n#| fig-width: 7\n#| fig_height: 12\n  \n\n# Filter and get top 10 subzones by elderly population\ntop_elderly_subzones &lt;- popdata_cleaned %&gt;%\n  filter(Age_Group == \"Elderly (65+)\") %&gt;%\n  arrange(desc(Total_Population)) %&gt;%\n  slice_head(n = 10)\n\n# Plot\ne1 &lt;- ggplot(top_elderly_subzones, aes(x = reorder(Subzone, Total_Population), y = Total_Population, fill = Planning_Area)) +\n  geom_col() +\n  coord_flip() +\n  labs(\n    title = \"Highest Elderly Population\",\n    x = \"Subzone\",\n    y = \"Number of Elderly Population\"\n  ) +\n  scale_fill_grey(start = 0.3, end = 0.8) +  # Use shades of grey\n  theme_bw() +\n  theme(legend.position = \"none\")\n\ne1#\n\n\n\n\n\n\n\n\n\n\n\nlibrary(ggplot2)\n#| fig-width: 7\n#| fig_height: 12\n\ntop_young_subzones &lt;- popdata_cleaned %&gt;%\n  filter(Age_Group == \"Young (0-17)\") %&gt;%\n  arrange(desc(Total_Population)) %&gt;%\n  slice_head(n = 10)\n\n# Plot\ny1 &lt;- ggplot(top_young_subzones, aes(x = reorder(Subzone, Total_Population), y = Total_Population, fill = Planning_Area)) +\n  geom_col() +\n  coord_flip() +\n  labs(\n    title = \"Highest Young Population\",\n    x = \"Subzone\",\n    y = \"Number of Young Population\"\n  ) +\n  scale_fill_grey(start = 0.3, end = 0.8) +  # Use shades of grey\n  theme_bw() +\n  theme(legend.position = \"none\")\n\ny1#\n\n\n\n\n\n\n\n\n\n\n\nlibrary(ggplot2)\n#| fig-width: 7\n#| fig_height: 12\n\n\ntop_working_subzones &lt;- popdata_cleaned %&gt;%\n  filter(Age_Group == \"Working Adults (18-64)\") %&gt;%\n  arrange(desc(Total_Population)) %&gt;%\n  slice_head(n = 10)\n\n# Plot\na1 &lt;- ggplot(top_working_subzones, aes(x = reorder(Subzone, Total_Population), y = Total_Population, fill = Planning_Area)) +\n  geom_col() +\n  coord_flip() +\n  labs(\n    title = \"Highest Working Adults Population\",\n    x = \"Subzone\",\n    y = \"Number of Working Adults Population\"\n  ) +\n  scale_fill_grey(start = 0.3, end = 0.8) +  \n  theme_bw() +\n  theme(legend.position = \"none\")\n\na1#"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#comparison-between-subzones-and",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#comparison-between-subzones-and",
    "title": "Take-home_Ex01",
    "section": "5.2 Comparison between Subzones and",
    "text": "5.2 Comparison between Subzones and"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#section-2",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#section-2",
    "title": "Take-home_Ex01",
    "section": "5.2",
    "text": "5.2"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#section-3",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#section-3",
    "title": "Take-home_Ex01",
    "section": "6.1",
    "text": "6.1"
  }
]