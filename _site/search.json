[
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html",
    "title": "Take-home_Ex02",
    "section": "",
    "text": "In the code chunk below, p_load() of pacman package is used to load the R packages into R environment.\n\n\nCode\npacman::p_load(tidyverse, jsonlite,\n               tidygraph, ggraph,\n               SmartEDA, dplyr, visNetwork, igraph)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#inspect-knowledge-graph-structure",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#inspect-knowledge-graph-structure",
    "title": "Take-home_Ex02",
    "section": "Inspect Knowledge Graph Structure",
    "text": "Inspect Knowledge Graph Structure\nIn the code chunk below glimpse() is used to reveal the structure of mc3 knowledge graph.\n\n\nCode\nglimpse(MC3)\n\n\nList of 5\n $ directed  : logi TRUE\n $ multigraph: logi FALSE\n $ graph     :List of 4\n  ..$ mode        : chr \"static\"\n  ..$ edge_default: Named list()\n  ..$ node_default: Named list()\n  ..$ name        : chr \"VAST_MC3_Knowledge_Graph\"\n $ nodes     :'data.frame': 1159 obs. of  31 variables:\n  ..$ type             : chr [1:1159] \"Entity\" \"Entity\" \"Entity\" \"Entity\" ...\n  ..$ label            : chr [1:1159] \"Sam\" \"Kelly\" \"Nadia Conti\" \"Elise\" ...\n  ..$ name             : chr [1:1159] \"Sam\" \"Kelly\" \"Nadia Conti\" \"Elise\" ...\n  ..$ sub_type         : chr [1:1159] \"Person\" \"Person\" \"Person\" \"Person\" ...\n  ..$ id               : chr [1:1159] \"Sam\" \"Kelly\" \"Nadia Conti\" \"Elise\" ...\n  ..$ timestamp        : chr [1:1159] NA NA NA NA ...\n  ..$ monitoring_type  : chr [1:1159] NA NA NA NA ...\n  ..$ findings         : chr [1:1159] NA NA NA NA ...\n  ..$ content          : chr [1:1159] NA NA NA NA ...\n  ..$ assessment_type  : chr [1:1159] NA NA NA NA ...\n  ..$ results          : chr [1:1159] NA NA NA NA ...\n  ..$ movement_type    : chr [1:1159] NA NA NA NA ...\n  ..$ destination      : chr [1:1159] NA NA NA NA ...\n  ..$ enforcement_type : chr [1:1159] NA NA NA NA ...\n  ..$ outcome          : chr [1:1159] NA NA NA NA ...\n  ..$ activity_type    : chr [1:1159] NA NA NA NA ...\n  ..$ participants     : int [1:1159] NA NA NA NA NA NA NA NA NA NA ...\n  ..$ thing_collected  :'data.frame':   1159 obs. of  2 variables:\n  .. ..$ type: chr [1:1159] NA NA NA NA ...\n  .. ..$ name: chr [1:1159] NA NA NA NA ...\n  ..$ reference        : chr [1:1159] NA NA NA NA ...\n  ..$ date             : chr [1:1159] NA NA NA NA ...\n  ..$ time             : chr [1:1159] NA NA NA NA ...\n  ..$ friendship_type  : chr [1:1159] NA NA NA NA ...\n  ..$ permission_type  : chr [1:1159] NA NA NA NA ...\n  ..$ start_date       : chr [1:1159] NA NA NA NA ...\n  ..$ end_date         : chr [1:1159] NA NA NA NA ...\n  ..$ report_type      : chr [1:1159] NA NA NA NA ...\n  ..$ submission_date  : chr [1:1159] NA NA NA NA ...\n  ..$ jurisdiction_type: chr [1:1159] NA NA NA NA ...\n  ..$ authority_level  : chr [1:1159] NA NA NA NA ...\n  ..$ coordination_type: chr [1:1159] NA NA NA NA ...\n  ..$ operational_role : chr [1:1159] NA NA NA NA ...\n $ edges     :'data.frame': 3226 obs. of  5 variables:\n  ..$ id         : chr [1:3226] \"2\" \"3\" \"5\" \"3013\" ...\n  ..$ is_inferred: logi [1:3226] TRUE FALSE TRUE TRUE TRUE TRUE ...\n  ..$ source     : chr [1:3226] \"Sam\" \"Sam\" \"Sam\" \"Sam\" ...\n  ..$ target     : chr [1:3226] \"Relationship_Suspicious_217\" \"Event_Communication_370\" \"Event_Assessment_600\" \"Relationship_Colleagues_430\" ...\n  ..$ type       : chr [1:3226] NA \"sent\" NA NA ..."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#extract-edges-and-nodes",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#extract-edges-and-nodes",
    "title": "Take-home_Ex02",
    "section": "Extract Edges and Nodes",
    "text": "Extract Edges and Nodes\nNext, as_tibble() of tibble package package is used to extract the nodes and links tibble data frames from mc3 tibble dataframe into two separate tibble dataframes called mc3_nodes and mc3_edges respectively.\n\n\nCode\nmc3_nodes &lt;- as_tibble(MC3$nodes)\nmc3_edges &lt;- as_tibble(MC3$edges)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#initial-eda",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#initial-eda",
    "title": "Take-home_Ex02",
    "section": "Initial EDA",
    "text": "Initial EDA\nIt is time for us to apply appropriate EDA methods to examine the data.\nIn the code chunk below, ExpCatViz() of SmartEDA package is used to reveal the frequency distribution of all categorical fields in mc3_nodes tibble dataframe.\nOn the other hands, code chunk below uses ExpCATViz() of SmartEDA package to reveal the frequency distribution of all categorical fields in mc3_edges tibble dataframe.\n\n\nCode\nExpCatViz(data=mc3_nodes,\n          col=\"lightblue\")\n\n\n[[1]]\n\n\n\n\n\n\n\n\n\n\n[[2]]\n\n\n\n\n\n\n\n\n\n\n[[3]]\n\n\n\n\n\n\n\n\n\n\n[[4]]\n\n\n\n\n\n\n\n\n\n\n[[5]]\n\n\n\n\n\n\n\n\n\n\n[[6]]\n\n\n\n\n\n\n\n\n\n\n[[7]]\n\n\n\n\n\n\n\n\n\n\n[[8]]\n\n\n\n\n\n\n\n\n\n\n[[9]]\n\n\n\n\n\n\n\n\n\n\n[[10]]\n\n\n\n\n\n\n\n\n\n\n[[11]]\n\n\n\n\n\n\n\n\n\n\n[[12]]\n\n\n\n\n\n\n\n\n\n\n[[13]]\n\n\n\n\n\n\n\n\n\n\n[[14]]"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#build-tidygraph-object",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#build-tidygraph-object",
    "title": "Take-home_Ex02",
    "section": "Build tidygraph Object",
    "text": "Build tidygraph Object\n\n\nCode\nmc3_graph &lt;- tbl_graph(\n  nodes = mc3_nodes_final,\n  edges = mc3_edges_final,\n  directed = TRUE\n)\n\nstr(mc3_graph)\n\n\nClasses 'tbl_graph', 'igraph'  hidden list of 10\n $ : num 1159\n $ : logi TRUE\n $ : num [1:3226] 0 0 0 0 0 0 0 1 1 1 ...\n $ : num [1:3226] 1137 356 746 894 875 ...\n $ : NULL\n $ : NULL\n $ : NULL\n $ : NULL\n $ :List of 4\n  ..$ : num [1:3] 1 0 1\n  ..$ : Named list()\n  ..$ :List of 31\n  .. ..$ type             : chr [1:1159] \"Entity\" \"Entity\" \"Entity\" \"Entity\" ...\n  .. ..$ label            : chr [1:1159] \"Sam\" \"Kelly\" \"Nadia Conti\" \"Elise\" ...\n  .. ..$ name             : chr [1:1159] \"Sam\" \"Kelly\" \"Nadia Conti\" \"Elise\" ...\n  .. ..$ sub_type         : chr [1:1159] \"Person\" \"Person\" \"Person\" \"Person\" ...\n  .. ..$ id               : chr [1:1159] \"Sam\" \"Kelly\" \"Nadia Conti\" \"Elise\" ...\n  .. ..$ timestamp        : chr [1:1159] NA NA NA NA ...\n  .. ..$ monitoring_type  : chr [1:1159] NA NA NA NA ...\n  .. ..$ findings         : chr [1:1159] NA NA NA NA ...\n  .. ..$ content          : chr [1:1159] NA NA NA NA ...\n  .. ..$ assessment_type  : chr [1:1159] NA NA NA NA ...\n  .. ..$ results          : chr [1:1159] NA NA NA NA ...\n  .. ..$ movement_type    : chr [1:1159] NA NA NA NA ...\n  .. ..$ destination      : chr [1:1159] NA NA NA NA ...\n  .. ..$ enforcement_type : chr [1:1159] NA NA NA NA ...\n  .. ..$ outcome          : chr [1:1159] NA NA NA NA ...\n  .. ..$ activity_type    : chr [1:1159] NA NA NA NA ...\n  .. ..$ participants     : int [1:1159] NA NA NA NA NA NA NA NA NA NA ...\n  .. ..$ reference        : chr [1:1159] NA NA NA NA ...\n  .. ..$ date             : chr [1:1159] NA NA NA NA ...\n  .. ..$ time             : chr [1:1159] NA NA NA NA ...\n  .. ..$ friendship_type  : chr [1:1159] NA NA NA NA ...\n  .. ..$ permission_type  : chr [1:1159] NA NA NA NA ...\n  .. ..$ start_date       : chr [1:1159] NA NA NA NA ...\n  .. ..$ end_date         : chr [1:1159] NA NA NA NA ...\n  .. ..$ report_type      : chr [1:1159] NA NA NA NA ...\n  .. ..$ submission_date  : chr [1:1159] NA NA NA NA ...\n  .. ..$ jurisdiction_type: chr [1:1159] NA NA NA NA ...\n  .. ..$ authority_level  : chr [1:1159] NA NA NA NA ...\n  .. ..$ coordination_type: chr [1:1159] NA NA NA NA ...\n  .. ..$ operational_role : chr [1:1159] NA NA NA NA ...\n  .. ..$ new_index        : int [1:1159] 1 2 3 4 5 6 7 8 9 10 ...\n  ..$ :List of 2\n  .. ..$ is_inferred: logi [1:3226] TRUE FALSE TRUE TRUE TRUE TRUE ...\n  .. ..$ type       : chr [1:3226] NA \"sent\" NA NA ...\n $ :&lt;environment: 0x000001bc9c7928c8&gt; \n - attr(*, \"active\")= chr \"nodes\""
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#visualize-knowledge-graph",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#visualize-knowledge-graph",
    "title": "Take-home_Ex02",
    "section": "Visualize knowledge graph",
    "text": "Visualize knowledge graph\nSeveral of the ggraph layouts involve randomisation. In order to ensure reproducibility, it is necessary to set the seed value before plotting by using the code chunk below.\n\n\nCode\nset.seed(1234)\n\n\nIn the code chunk below, ggraph functions are used to create the whole graph.\n\n\nCode\nggraph(mc3_graph, \n       layout = \"fr\") +\n  geom_edge_link(alpha = 0.3, \n                 colour = \"gray\") +\n  geom_node_point(aes(color = `type`), \n                  size = 4) +\n  geom_node_text(aes(label = type), \n                 repel = TRUE, \n                 size = 2.5) +\n  theme_void()"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#background",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#background",
    "title": "Take-home_Ex02",
    "section": "Background",
    "text": "Background\nOver the past decade, the community of Oceanus has faced numerous transformations and challenges evolving from its fishing-centric origins. Following major crackdowns on illegal fishing activities, suspects have shifted investments into more regulated sectors such as the ocean tourism industry, resulting in growing tensions. This increased tourism has recently attracted the likes of international pop star Sailor Shift, who announced plans to film a music video on the island.\nClepper Jessen, a former analyst at FishEye and now a seasoned journalist for the Hacklee Herald, has been keenly observing these rising tensions. Recently, he turned his attention towards the temporary closure of Nemo Reef. By listening to radio communications and utilizing his investigative tools, Clepper uncovered a complex web of expedited approvals and secretive logistics. These efforts revealed a story involving high-level Oceanus officials, Sailor Shift’s team, local influential families, and local conservationist group The Green Guardians, pointing towards a story of corruption and manipulation.\nYour task is to develop new and novel visualizations and visual analytics approaches to help Clepper get to the bottom of this story."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#tasks-and-questions",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#tasks-and-questions",
    "title": "Take-home_Ex02",
    "section": "Tasks and Questions:",
    "text": "Tasks and Questions:\nClepper diligently recorded all intercepted radio communications over the last two weeks. With the help of his intern, they have analyzed their content to identify important events and relationships between key players. The result is a knowledge graph describing the last two weeks on Oceanus. Clepper and his intern have spent a large amount of time generating this knowledge graph, and they would now like some assistance using it to answer the following questions.\n\nClepper found that messages frequently came in at around the same time each day.\n\nDevelop a graph-based visual analytics approach to identify any daily temporal patterns in communications.\nHow do these patterns shift over the two weeks of observations?\nFocus on a specific entity and use this information to determine who has influence over them."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#extracting-graph-elements",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#extracting-graph-elements",
    "title": "Take-home_Ex02",
    "section": "Extracting Graph Elements",
    "text": "Extracting Graph Elements\nTo identify any patterns in communications between the different people or companies, only “sub_type”, “name”, “content” and “timestamp” columns were used to do these analysis.\n\n1. Make an entity list2. Make a Content for communications List3. Make a new list - to identify the entities involved in the messages in the communications4. Create new Edges data frame (Entity -&gt; Entity)\n\n\n\n\nCode\nentity_list &lt;- subset(mc3_nodes_final, type == \"Entity\", select = c(sub_type, name))\n\nentity_list\n\n\n# A tibble: 72 × 2\n   sub_type name          \n   &lt;chr&gt;    &lt;chr&gt;         \n 1 Person   Sam           \n 2 Person   Kelly         \n 3 Person   Nadia Conti   \n 4 Person   Elise         \n 5 Person   Liam Thorne   \n 6 Person   Samantha Blake\n 7 Person   Davis         \n 8 Person   Rodriguez     \n 9 Person   Sailor Shift  \n10 Person   Clepper Jensen\n# ℹ 62 more rows\n\n\n\n\n\n\nCode\ncomms_list &lt;- subset(mc3_nodes_final, type == \"Event\" & label == \"Communication\", select = c(timestamp, content))\n\ncomms_list\n\n\n# A tibble: 584 × 2\n   timestamp           content                                                  \n   &lt;chr&gt;               &lt;chr&gt;                                                    \n 1 2040-10-01 08:09:00 Hey The Intern, it's The Lookout! Just spotted a pod of …\n 2 2040-10-01 08:10:00 Hey The Lookout, The Intern here! I'd absolutely love to…\n 3 2040-10-01 08:13:00 Sam, it's Kelly! Let's meet at Sunrise Point at 7 AM for…\n 4 2040-10-01 08:16:00 Mrs. Money, it's The Intern. Just checking in to see wha…\n 5 2040-10-01 08:19:00 Boss, it's Mrs. Money. I've reviewed our operational fun…\n 6 2040-10-01 08:21:00 Mrs. Money, this is Boss. I'm available tomorrow at 3 PM…\n 7 2040-10-01 08:24:00 Boss, Mrs. Money here. I'll bring the updated projection…\n 8 2040-10-01 08:26:00 Middleman, this is Boss. I'd like to move our meeting fo…\n 9 2040-10-01 08:29:00 Boss, this is The Middleman. I can meet earlier as reque…\n10 2040-10-01 08:32:00 Middleman, this is Boss. Let's meet tomorrow at 4PM at t…\n# ℹ 574 more rows\n\n\n\n\n\n\nCode\nclean_text &lt;- function(x) {\n  x &lt;- tolower(x)\n  x &lt;- gsub(\"[^a-z0-9 ]\", \"\", x)  # remove punctuation\n  trimws(x)\n}\n\nentity_names &lt;- unique(mc3_nodes_final$name)\n\n# Pre-clean both\nentity_names_clean &lt;- sapply(entity_names, clean_text)\ncontent_clean &lt;- sapply(comms_list$content, clean_text)\n\n# Match using the cleaned versions\ncomms_entity_list &lt;- mapply(function(ts, content) {\n  matches &lt;- entity_names[ sapply(entity_names_clean, function(entity) grepl(entity, content, fixed = TRUE)) ]\n  list(timestamp = ts, entities = matches)\n}, ts = comms_list$timestamp, content = content_clean, SIMPLIFY = FALSE)\n\n\n\n\nFor ggraph to plot the edges correctly, we need to assigns weights to the edges. For simplicity, let us assign the number of edges with the same source, target and type.\nIt will then be changed from source and target to from and to, respectively for compatibility with network functions we will use.\n\n\nCode\nedges_list &lt;- lapply(comms_entity_list, function(x) {\n  ents &lt;- x$entities\n  if(length(ents) &lt; 2) return(NULL)  # Need at least 2 to make an edge\n  \n  # Create all pairwise combinations (undirected edges)\n  pairs &lt;- t(combn(ents, 2))\n  \n  data.frame(\n    from = pairs[,1],\n    to = pairs[,2],\n    timestamp = x$timestamp,\n    stringsAsFactors = FALSE\n  )\n})\n\n# Combine all into one data frame\nedges_edges_df &lt;- do.call(rbind, edges_list)\n\nhead(edges_edges_df)\n\n\n                             from          to           timestamp\n2040-10-01 08:09:00.1  The Intern The Lookout 2040-10-01 08:09:00\n2040-10-01 08:09:00.2  The Intern        &lt;NA&gt; 2040-10-01 08:09:00\n2040-10-01 08:09:00.3 The Lookout        &lt;NA&gt; 2040-10-01 08:09:00\n2040-10-01 08:10:00.1  The Intern The Lookout 2040-10-01 08:10:00\n2040-10-01 08:10:00.2  The Intern  Mrs. Money 2040-10-01 08:10:00\n2040-10-01 08:10:00.3  The Intern        &lt;NA&gt; 2040-10-01 08:10:00\n\n\nCode\nweighted_edges &lt;- edges_edges_df %&gt;%\n  count(from, to, name = \"weight\")\nhead(weighted_edges)\n\n\n        from                   to weight\n1 Azure Cove          Dolphin Bay      1\n2 Azure Cove           South Dock      1\n3 Azure Cove                 &lt;NA&gt;      3\n4   Berth 14                 &lt;NA&gt;      3\n5       Boss Conservation Vessels      7\n6       Boss             EcoVigil      2"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#visualize-interactive-network-graph-of-communications-with-visnetwork",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#visualize-interactive-network-graph-of-communications-with-visnetwork",
    "title": "Take-home_Ex02",
    "section": "Visualize Interactive Network Graph of Communications with visNetwork",
    "text": "Visualize Interactive Network Graph of Communications with visNetwork\n\nCommunication Network (As a whole)Narrowed down specific sub-typesPersons’ Communication\n\n\nThis is the baseline of the communication network based on the sub-types of organization, person, group, vessel, location and monitoring.\n\n\nCode\nnodes &lt;- mc3_nodes_final %&gt;%\n  distinct(name, .keep_all = TRUE) %&gt;%\n  mutate(id = name, label = name) %&gt;%\n  select(id, sub_type)\n\nnodes$group &lt;- nodes$sub_type\n\nedges &lt;- edges_edges_df %&gt;%\n  mutate(arrows = \"to\",\n         title = paste0(\"From: \", from, \"&lt;br&gt;To: \", to))\n\nvisNetwork(nodes, edges) %&gt;%\n  visEdges(smooth = FALSE, arrows = \"to\") %&gt;%\n  visNodes(font = list(size = 20)) %&gt;%\n  visOptions(highlightNearest = TRUE, nodesIdSelection = TRUE) %&gt;%\n  visIgraphLayout(layout = \"layout_with_fr\") %&gt;%\n  visLegend()\n\n\n\n\n\n\n\n\nSince this is too big of a network, it will be narrowed down to organization, person and vessel based on the sub-types as the other 3 sub-types seems to show little correlation as shown in the network below.\nimportant_types are the 3 sub-types that we are looking more in-depth to see if there is any relationship between the 3 types. Making use of the group attribute that is created to clearly identify the different types of nodes inimportant_types.\nFor ease of selecting a particular entity, a dropdown list with all the entities (nodes) that are present in the graph is shown.\nMouse pointer hover action is also included on the graph so that the user can hover the mouse pointer over the graph to look at the possible different ‘groups’ of connectivity as well as the number of messages sent to each ‘group’.\n\nThe thicker the lines, the more messages are communicated between the sub-types.\nOutliers are isolated - no direct connections exclusively between them.\n\n\n\nCode\nimportant_types &lt;- c(\"Organization\", \"Person\", \"Location\")\nfiltered_nodes &lt;- mc3_nodes_final %&gt;%\n  filter(sub_type %in% important_types)\n\nfiltered_edges &lt;- edges_edges_df %&gt;%\n  filter(from %in% filtered_nodes$name, to %in% filtered_nodes$name)\n\nnodes &lt;- filtered_nodes %&gt;%\n  rename(id = name, group = sub_type, label_new = name)\n\nedges &lt;- filtered_edges %&gt;%\n  group_by(from, to) %&gt;%\n  summarise(value = n(), .groups = \"drop\") %&gt;%\n  mutate(arrows = \"to\", title = paste(\"Messages:\", value))\n\nvisNetwork(nodes, edges) %&gt;%\n  visGroups(groupname = \"Organization\", color = \"tomato\") %&gt;%\n  visGroups(groupname = \"Person\", color = \"skyblue\") %&gt;%\n  visGroups(groupname = \"Location\", color = \"lightgreen\") %&gt;%\n  visIgraphLayout(layout = \"layout_with_fr\") %&gt;%\n  visPhysics(enabled = FALSE) %&gt;%\n  visOptions(highlightNearest = TRUE, nodesIdSelection = TRUE) %&gt;%\n  visLegend()\n\n\n\n\n\n\nOrganization to Person Communication\n\n\nCode\nimportant_types &lt;- c(\"Organization\", \"Person\")\nfiltered_nodes &lt;- mc3_nodes_final %&gt;%\n  filter(sub_type %in% important_types)\n\nfiltered_edges &lt;- edges_edges_df %&gt;%\n  filter(from %in% filtered_nodes$name, to %in% filtered_nodes$name)\n\nnodes &lt;- filtered_nodes %&gt;%\n  rename(id = name, group = sub_type, label_new = name)\n\nedges &lt;- filtered_edges %&gt;%\n  group_by(from, to) %&gt;%\n  summarise(value = n(), .groups = \"drop\") %&gt;%\n  mutate(arrows = \"to\", title = paste(\"Messages:\", value))\n\nvisNetwork(nodes, edges) %&gt;%\n  visGroups(groupname = \"Organization\", color = \"tomato\") %&gt;%\n  visGroups(groupname = \"Person\", color = \"skyblue\") %&gt;%\n  visIgraphLayout(layout = \"layout_with_fr\") %&gt;%\n  visPhysics(enabled = FALSE) %&gt;%\n  visOptions(highlightNearest = TRUE, nodesIdSelection = TRUE) %&gt;%\n  visLegend()\n\n\n\n\n\n\n\n\n\n\nCode\nimportant_types &lt;- c(\"Person\")\nfiltered_nodes &lt;- mc3_nodes_final %&gt;%\n  filter(sub_type %in% important_types)\n\nfiltered_edges &lt;- edges_edges_df %&gt;%\n  filter(from %in% filtered_nodes$name, to %in% filtered_nodes$name)\n\nnodes &lt;- filtered_nodes %&gt;%\n  rename(id = name, group = sub_type, label_new = name)\n\nedges &lt;- filtered_edges %&gt;%\n  group_by(from, to) %&gt;%\n  summarise(value = n(), .groups = \"drop\") %&gt;%\n  mutate(arrows = \"to\", title = paste(\"Messages:\", value))\n\nvisNetwork(nodes, edges) %&gt;%\n  visGroups(groupname = \"Organization\", color = \"tomato\") %&gt;%\n  visGroups(groupname = \"Person\", color = \"skyblue\") %&gt;%\n  visIgraphLayout(layout = \"layout_with_fr\") %&gt;%\n  visPhysics(enabled = FALSE) %&gt;%\n  visOptions(highlightNearest = TRUE, nodesIdSelection = TRUE) %&gt;%\n  visLegend()\n\n\n\n\n\n\n\n\n\n\n💡 Observations from Communication Network\n\n\n\nNemo Reef has the highest communications among the locations shown.\nMiranda Jordan and Liam Thomson do not have any direct connections between any people as they are isolated.\nBoss seems to be entity that has the most influence among the organizations as Boss has the most edges in terms of communication.\nV. Miesel Shipping seems to be the entity that has the most influence among the persons with the most edges as well in terms of communication.\n\n\n\n\n\nTime-based Pattern ShiftsComparison of Week 1 and Week 2 Communications\n\n\nTo detect behavioural changes between individuals and organizations based on the clusters forming or active nodes being isolated.\nFirstly, Filter the dates to week 1 (first 7 days) and week 2 (next 7 days) from 01-10-2040 to 07-10-2040 and from 08-10-2040 to 15-10-2040.\n\n\nCode\n# Ensure date_only is created from timestamp\nmc3_nodes_final$date_only &lt;- as.Date(mc3_nodes_final$timestamp)\n\nend_date &lt;- max(mc3_nodes_final$date_only, na.rm = TRUE)\n\nwk2_start &lt;- end_date - 7\nwk1_start &lt;- end_date - 14\n\n# Filter Week 1 (first 7 days)\nweek1 &lt;- mc3_nodes_final %&gt;%\n  filter(date_only &gt;= wk1_start & date_only &lt; wk2_start) %&gt;%\n  filter(type == \"Event\", label == \"Communication\")\n  \n# Filter Week 2 (next 7 days)\nweek2 &lt;- mc3_nodes_final %&gt;%\n  filter(date_only &gt;= wk2_start | date_only &lt;= end_date) %&gt;%\n  filter(type == \"Event\", label == \"Communication\")\n\n\n\n\n\n\nCode\nweek1_ids &lt;- week1$timestamp\nweek2_ids &lt;- week2$timestamp\n\nedges_week1 &lt;- edges_edges_df %&gt;% filter(timestamp %in% week1$timestamp)\nedges_week2 &lt;- edges_edges_df %&gt;% filter(timestamp %in% week2$timestamp)\n\n\nedges_wk1 &lt;- edges_week1 %&gt;% select(from, to)\nedges_wk2 &lt;- edges_week2 %&gt;% select(from, to)\n\nnodes_wk1 &lt;- data.frame(\n  id = unique(c(edges_week1$from, edges_week1$to)),\n  label = unique(c(edges_week1$from, edges_week1$to))\n)\n\nedges_wk1 &lt;- edges_week1 %&gt;%\n  select(from, to)\n\nnodes_wk2 &lt;- data.frame(\n  id = unique(c(edges_week2$from, edges_week2$to)),\n  label = unique(c(edges_week2$from, edges_week2$to))\n)\n\nedges_wk2 &lt;- edges_week2 %&gt;%\n  select(from, to)\n\nvisNetwork(nodes_wk1, edges_wk1, width = \"100%\", height = \"400px\") %&gt;%\n  visIgraphLayout(layout = \"layout_with_fr\") %&gt;%\n  visPhysics(enabled = FALSE) %&gt;%\n  visOptions(highlightNearest = TRUE, nodesIdSelection = TRUE) %&gt;%\n  visLegend()\n\n\n\n\n\n\nCode\nvisNetwork(nodes_wk2, edges_wk2, width = \"100%\", height = \"400px\") %&gt;%\n  visIgraphLayout(layout = \"layout_with_fr\") %&gt;%\n  visPhysics(enabled = FALSE) %&gt;%\n  visOptions(highlightNearest = TRUE, nodesIdSelection = TRUE) %&gt;%\n  visLegend()\n\n\n\n\n\n\n\n\n\n\n💡 Observations from Communication Time-based Pattern shifts\n\n\n\nAs an overall, most communication are reduced when transitioning to week 2."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#heatmap-by-grouped-type-organization-people-vessel",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#heatmap-by-grouped-type-organization-people-vessel",
    "title": "Take-home_Ex02",
    "section": "Heatmap by Grouped Type (Organization, People, Vessel)",
    "text": "Heatmap by Grouped Type (Organization, People, Vessel)\nThe heatmap is created to analyzed on the communication (i.e. number of messages) between the individuals as well as other subtypes as shown below. I will be narrowing it down to people’s communication to see if there is any suspicious activity going on between them.\n\nHeatmap (By type)Heatmap (Individuals)Top 5 people that communicates the most\n\n\n\n\nCode\nby_type &lt;- edges_with_meta %&gt;%\n  group_by(date, hour, sub_type) %&gt;%\n  summarise(message_count = n(), .groups = \"drop\")\n\nggplot(by_type, aes(x = hour, y = date, fill = message_count)) +\n  geom_tile() +\n  facet_wrap(~ sub_type) +\n  scale_fill_gradient(low = \"white\", high = \"purple\") +\n  theme_minimal() +\n  labs(\n    title = \"Communication Patterns by Type\",\n    x = \"Hour of Day\", y = \"Date\", fill = \"Count\"\n  )\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nby_person &lt;- edges_with_meta %&gt;%\n  filter(sub_type == \"Person\") %&gt;%\n  group_by(date, hour) %&gt;%\n  summarise(message_count = n(), .groups = \"drop\")\n\nggplot(by_person, aes(x = hour, y = date, fill = message_count)) +\n  geom_tile(color = \"white\") +\n  scale_fill_gradient(low = \"white\", high = \"purple\") +\n  theme_minimal() +\n  labs(\n    title = \"Communication Patterns (Senders Who Are Persons)\",\n    x = \"Hour of Day\", y = \"Date\", fill = \"Message Count\"\n  )\n\n\n\n\n\n\n\n\n\n\n\nCode\nby_person_detail &lt;- edges_with_meta %&gt;%\n  filter(sub_type == \"Person\") %&gt;%\n  group_by(date, hour, name) %&gt;%\n  summarise(message_count = n(), .groups = \"drop\")\n\nggplot(by_person_detail, aes(x = hour, y = date, fill = message_count)) +\n  geom_tile() +\n  facet_wrap(~ name) +\n  scale_fill_gradient(low = \"white\", high = \"purple\") +\n  theme_minimal() +\n  labs(\n    title = \"Message Timing for Each Person\",\n    x = \"Hour of Day\", y = \"Date\", fill = \"Count\"\n  )\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\n# Count total messages sent by each person\ntop_5_people &lt;- edges_with_meta %&gt;%\n  filter(sub_type == \"Person\") %&gt;%\n  count(name, sort = TRUE) %&gt;%\n  slice_head(n = 5) %&gt;%\n  pull(name)  # extract just the names\n\ntop_people_data &lt;- edges_with_meta %&gt;%\n  filter(sub_type == \"Person\", name %in% top_5_people) %&gt;%\n  group_by(date, hour, name) %&gt;%\n  summarise(message_count = n(), .groups = \"drop\")\n\nggplot(top_people_data, aes(x = hour, y = date, fill = message_count)) +\n  geom_tile(color = \"white\") +\n  facet_wrap(~ name) +\n  scale_fill_gradient(low = \"white\", high = \"darkorange\") +\n  theme_minimal() +\n  labs(\n    title = \"Top 5 Most Active People: Communication Heatmap\",\n    x = \"Hour of Day\", y = \"Date\", fill = \"Messages Sent\"\n  )\n\n\n\n\n\n\n\n\n\n\n\n\n\n💡 Observations from Communication Heatmap\n\n\n\nIt is shown that the top 5 individuals communicating are Sam, Davis, The Intern, Mrs Money and Boss has the most communication among all the individuals.\nThe communication is mostly done between the 8th and 10th hour of the day.\nThere isn’t really a distinguished date where they communicated the most.\n\n\n\n\n\n\nCode\ntop_5_people &lt;- edges_with_meta %&gt;%\n  filter(sub_type == \"Person\") %&gt;%\n  count(name, sort = TRUE) %&gt;%\n  slice_head(n = 5) %&gt;%\n  pull(name)\n\nreceiver_meta &lt;- mc3_nodes_final %&gt;%\n  select(id, to_name = name, to_type = sub_type)\n\nedges_top5 &lt;- edges_with_meta %&gt;%\n  left_join(receiver_meta, by = c(\"to\" = \"id\")) %&gt;%\n  filter(name %in% top_5_people, to_name %in% top_5_people)\n\nedge_list &lt;- edges_top5 %&gt;%\n  group_by(name, to_name) %&gt;%\n  summarise(value = n(), .groups = \"drop\") %&gt;%\n  rename(from = name, to = to_name)\n\nnodes_list &lt;- unique(c(edge_list$from, edge_list$to))\n\n# Create nodes dataframe\nnodes &lt;- data.frame(\n  id = nodes_list,\n  label = nodes_list,\n  title = nodes_list,\n  group = \"Person\",      \n  stringsAsFactors = FALSE\n)\n\nedges &lt;- edge_list %&gt;%\n  mutate(\n    width = value,               # edge thickness\n    label = as.character(value)  \n  )\n\nvisNetwork(nodes, edge_list, width = \"100%\") %&gt;%\n  visEdges(arrows = \"to\") %&gt;%\n  visOptions(highlightNearest = TRUE, nodesIdSelection = TRUE) %&gt;%\n  visLayout(randomSeed = 123) %&gt;%\n  visPhysics(stabilization = TRUE) %&gt;%\n  visLegend()\n\n\n\n\n\n\n\n💡 Observations from Communication Heatmap\n\n\n\nBoss is the suspected mastermind and most suspicious as everyone is sending him all the updates and messages to him and shows that he has the most communication among the 5 people."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html",
    "title": "Take-home_Ex01",
    "section": "",
    "text": "The Department of Statistics (DOS) Singapore is the national authority responsible for the collection, compilation, analysis and dissemination of official statistics in Singapore. As part of the Ministry of Trade and Industry, DOS plays a pivotal role in supporting evidence-based policy-making and planning by providing timely and reliable demographic, social and economic statistics.\nIn the context of population studies, DOS regularly published detailed data sets that inform stakeholders on trends in age structure, gender distribution, geographical dispersion and population growth. This would help to analyze population structures, identifying spatial disparities and tracking demographic shifts across time and regions.\nThe DOS data set taken in 2024 consisted resident population (age and sex) of the planning regions based on the main area and sub-zones.\n\n\n\nThe data used for this exercise is Singapore Residents by Planning Area / Subzone, Single Year of Age and Sex, June 2024 which can be retrieved from Department of Statistics, Singapore (DOS) Population Trends tab.\n\n\n\nImage of DOS data\n\n\n\n\n\nAs a graphical editor of the media company, the task is to prepare data visualization for the article on demographic structures and distribution of Singapore in 2024.\nUsing the DOS data set above, this post aims to use appropriate tidyverse family of packages (dplr, tidyr), exploratory data analysis (EDA) and ggplot2 functions and its extensions to uncover:\n\nDependency Burden: the regions that have a high dependency ratio (high proportion of young and elderly) to find out if there are sufficient facilities (e.g. childcare centers and eldercare facilities)\nUrban Planning and Housing Needs: the aging communities in Singapore based on the geographical regions using the subzone-level data"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#background",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#background",
    "title": "Take-home_Ex01",
    "section": "",
    "text": "The Department of Statistics (DOS) Singapore is the national authority responsible for the collection, compilation, analysis and dissemination of official statistics in Singapore. As part of the Ministry of Trade and Industry, DOS plays a pivotal role in supporting evidence-based policy-making and planning by providing timely and reliable demographic, social and economic statistics.\nIn the context of population studies, DOS regularly published detailed data sets that inform stakeholders on trends in age structure, gender distribution, geographical dispersion and population growth. This would help to analyze population structures, identifying spatial disparities and tracking demographic shifts across time and regions.\nThe DOS data set taken in 2024 consisted resident population (age and sex) of the planning regions based on the main area and sub-zones."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#data",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#data",
    "title": "Take-home_Ex01",
    "section": "",
    "text": "The data used for this exercise is Singapore Residents by Planning Area / Subzone, Single Year of Age and Sex, June 2024 which can be retrieved from Department of Statistics, Singapore (DOS) Population Trends tab.\n\n\n\nImage of DOS data"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#task",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#task",
    "title": "Take-home_Ex01",
    "section": "",
    "text": "As a graphical editor of the media company, the task is to prepare data visualization for the article on demographic structures and distribution of Singapore in 2024.\nUsing the DOS data set above, this post aims to use appropriate tidyverse family of packages (dplr, tidyr), exploratory data analysis (EDA) and ggplot2 functions and its extensions to uncover:\n\nDependency Burden: the regions that have a high dependency ratio (high proportion of young and elderly) to find out if there are sufficient facilities (e.g. childcare centers and eldercare facilities)\nUrban Planning and Housing Needs: the aging communities in Singapore based on the geographical regions using the subzone-level data"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#variable-selection",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#variable-selection",
    "title": "Take-home_Ex01",
    "section": "4.1 Variable Selection",
    "text": "4.1 Variable Selection\nBased on the excel spreadsheet, Singapore Residents by Planning Area / Subzone, Single Year of Age and Sex, June 2024, I will be categorizing the data set into what was shown above in the flowchart. The ages of the population will be divided into 3 categories: Young (0-17 years), Working adults (18-64), Elderly (65+). The genders will be divided into female and male. As for the planning areas, there are 55 planning areas (main zones) and 346 subzones.\nBelow are the list of variables retained for this study which are grouped into 2 categories of Age and Planning areas.\n\n\n\n\n\n\n\n\n\nCategory\nDescription\nType\nEncoding Scheme\n\n\n\n\nAge\nDependency Burden\nNUM\nYoung Children (0-4 years)\nYouth (5-12 years)\nTeens (13-17 years)\nWorking Adults (18-64 years)\nElderly (65+ years)\n\n\nPlanning areas\nUrban Planning and Housing Needs\nNUM\nMain zones\nSubzones"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#recoding-categorical-variables",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#recoding-categorical-variables",
    "title": "Take-home_Ex01",
    "section": "4.2 Recoding Categorical Variables",
    "text": "4.2 Recoding Categorical Variables\n\nAge groupsMain zones and subzones\n\n\nIn order to have a consistent data set to analyze the population age groups, data is cleaned by filter() to set new values into 3 age groups:\n\nYoung Children of 0 - 4 years\nYouth of 5 - 12 years\nTeens of 13 - 17 years\nWorking Adults of 18 - 64 years\nand Elderly of 65 years and above\n\nThe values are all within the new column namely Age_Group.\n\n\nThe data set is then further categorized by main zones and subzones by using filter()to remove the totals in columns of Age, Sex, Subzone and ‘-’ in Population as they are repeated values or null values. The values are then all renamed Planning_Area, Subzone, and Total_Population.\n\n\nCode\nlibrary(readxl)\nlibrary(dplyr)\n\n# Load the data\npopdata &lt;- read_excel(\"C:\\\\shermainn\\\\ISSS608new\\\\Take-home_Ex\\\\Take-home_Ex01\\\\data\\\\respopagesex2024e.xlsx\")\n\n# Clean and process\npopdata_cleaned &lt;- popdata %&gt;%\n  rename(\n    Planning_Area = `Planning Area`,\n    Population = `2024`\n  ) %&gt;%\n  filter(Sex != \"Total\", Age != \"Total\", Subzone != \"Total\") %&gt;%\n  mutate(\n    Population = na_if(Population, \"-\"),            \n    Age = as.numeric(Age),\n    Population = as.numeric(Population),\n    Age_Group = case_when(\n      Age &gt;= 0 & Age &lt;= 4 ~ \"Young (0-4)\",\n      Age &gt;= 5 & Age &lt;= 12 ~ \"Youth (5-12)\",\n      Age &gt;= 13 & Age &lt;= 17 ~ \"Teens (13-17)\",\n      Age &gt;= 18 & Age &lt;= 64 ~ \"Working Adults (18-64)\",\n      Age &gt;= 65 ~ \"Elderly (65+)\",\n      TRUE ~ NA_character_\n    )\n  ) %&gt;%\n  filter(!is.na(Age_Group)) %&gt;%\n  group_by(Planning_Area, Subzone, Age_Group) %&gt;%\n  summarise(Total_Population = sum(Population, na.rm = TRUE), .groups = \"drop\")\n\n# View results\nhead(popdata_cleaned)\n\n\n# A tibble: 6 × 4\n  Planning_Area Subzone                Age_Group              Total_Population\n  &lt;chr&gt;         &lt;chr&gt;                  &lt;chr&gt;                             &lt;dbl&gt;\n1 Ang Mo Kio    Ang Mo Kio Town Centre Elderly (65+)                       880\n2 Ang Mo Kio    Ang Mo Kio Town Centre Teens (13-17)                       290\n3 Ang Mo Kio    Ang Mo Kio Town Centre Working Adults (18-64)             3170\n4 Ang Mo Kio    Ang Mo Kio Town Centre Young (0-4)                         120\n5 Ang Mo Kio    Ang Mo Kio Town Centre Youth (5-12)                        420\n6 Ang Mo Kio    Cheng San              Elderly (65+)                      6580"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#top-10-subzones-of-each-age-group",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#top-10-subzones-of-each-age-group",
    "title": "Take-home_Ex01",
    "section": "5.1 Top 10 subzones of each age group",
    "text": "5.1 Top 10 subzones of each age group\nIdentifying the top 10 subzones for each age group is paramount for informed urban planning and resource allocation. By understanding the demographic concentrations and where they are located at would help the government agencies, planners and social service providers to allocate infrastructure, facilities and services for efficiently and effectively.\nFor instance, subzones with a high elderly proportion would require more eldercare services, accessible transportation and healthcare centers. On the other hand, areas with many children would need sufficient childcare centers, schools and recreational amenities.\n\nElderly (65+ years)Young Children (0-4 years)Youth (5-12 years)Teens (13-17 years)Working Adults (18-64 years)Comparison between 2 groups (young and youth dependents)\n\n\n\n\nCode\n# Filter and get top 10 subzones by elderly population\ntop_elderly_subzones &lt;- popdata_cleaned %&gt;%\n  filter(Age_Group == \"Elderly (65+)\") %&gt;%\n  arrange(desc(Total_Population)) %&gt;%\n  slice_head(n = 10)\n\n# Plot\ne1 &lt;- ggplot(top_elderly_subzones, \n             aes(x = reorder(Subzone, Total_Population), \n                 y = Total_Population, \n                 fill = Planning_Area)) +\n  geom_col() +\n  coord_flip() +\n  geom_text(aes(label = Total_Population), \n            hjust = -0.1, size = 3.5) +\n  labs(\n    title = \"Top 10 Subzones by Elderly Population (65+)\",\n    x = \"Subzone\",\n    y = \"Elderly Population\"\n  ) +\n  scale_fill_grey(start = 0.3, end = 0.8) +\n  scale_x_discrete(expand = expansion(mult = c(0.05, 0.05))) +\n  scale_y_continuous(\n    breaks = seq(0, 30000, by = 5000),\n    limits = c(0, 30000),  \n    expand = c(0, 0)  \n  ) +\n  theme_bw() +\n  theme(\n    legend.position = \"none\",\n    plot.margin = margin(t=20,r=50,b=20,l=40),\n    plot.title = element_text(hjust = 0.5, face = \"bold\"),\n    plot.subtitle = element_text(hjust = 0.5),\n    axis.title.y = element_text(margin = margin(r = 10)),\n    axis.title.x = element_text(margin = margin(t = 10)),\n    panel.grid.major.y = element_blank(),\n    panel.grid.major.x = element_line(color = \"gray80\"),\n    axis.text = element_text(size = 10)\n  )\n\ne1\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\ntop_young_subzones &lt;- popdata_cleaned %&gt;%\n  filter(Age_Group == \"Young (0-4)\") %&gt;%\n  arrange(desc(Total_Population)) %&gt;%\n  slice_head(n = 10)\n\n# Plot\ny1 &lt;- ggplot(top_young_subzones, \n             aes(x = reorder(Subzone, Total_Population), \n                 y = Total_Population, \n                 fill = Planning_Area)) +\n  geom_col() +\n  geom_text(aes(label = Total_Population), \n            hjust = -0.1, size = 3.5) +\n  coord_flip() +\n  labs(\n    title = \"Top 10 Subzones by Young Population (0-4)\",\n    x = \"Subzone\",\n    y = \"Number of Young Population\"\n  ) +\n  scale_fill_grey(start = 0.3, end = 0.8) +\n    scale_x_discrete(expand = expansion(mult = c(0.05, 0.05))) +\n  scale_y_continuous(\n    breaks = seq(0, 10000, by = 1000),\n    limits = c(0, 10000),  \n    expand = c(0, 0)  \n  ) +\n  theme_bw() +\n  theme(\n    legend.position = \"none\",\n    plot.margin = margin(t=20,r=50,b=20,l=40),\n    plot.title = element_text(hjust = 0.5, face = \"bold\"),\n    plot.subtitle = element_text(hjust = 0.5),\n    axis.title.y = element_text(margin = margin(r = 10)),\n    axis.title.x = element_text(margin = margin(t = 10)),\n    panel.grid.major.y = element_blank(),\n    panel.grid.major.x = element_line(color = \"gray80\"),\n    axis.text = element_text(size = 10)\n  )\n\ny1\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\n# Create top_youth_subzones\ntop_youth_subzones &lt;- popdata_cleaned %&gt;%\n  filter(Age_Group == \"Youth (5-12)\") %&gt;%\n  arrange(desc(Total_Population)) %&gt;%\n  slice_head(n = 10)\n\n# Static plot\ny2 &lt;- ggplot(top_youth_subzones, \n             aes(x = reorder(Subzone, Total_Population),\n                 y = Total_Population,\n                 fill = Planning_Area)) +\n  geom_col() +\n  geom_text(aes(label = Total_Population), \n            hjust = -0.1, size = 3.5) +\n  coord_flip() +\n  labs(\n    title = \"Top 10 subzones of Youth Population (5-12)\",\n    x = \"Subzone\",\n    y = \"Number of Youth Population\"\n  ) +\n  scale_fill_grey(start = 0.3, end = 0.8) +\n  scale_x_discrete(expand = expansion(mult = c(0.05, 0.05))) +\n  scale_y_continuous(\n    breaks = seq(0, 10000, by = 1000),\n    limits = c(0, 10000),  \n    expand = c(0, 0)  \n  ) +\n  theme_bw() +\n    theme(\n    legend.position = \"none\",\n    plot.margin = margin(t=20,r=50,b=20,l=40),\n    plot.title = element_text(hjust = 0.5, face = \"bold\"),\n    plot.subtitle = element_text(hjust = 0.5),\n    axis.title.y = element_text(margin = margin(r = 10)),\n    axis.title.x = element_text(margin = margin(t = 10)),\n    panel.grid.major.y = element_blank(),\n    panel.grid.major.x = element_line(color = \"gray80\"),\n    axis.text = element_text(size = 10)\n  )\n\ny2\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\n#| fig-width: 7\n#| fig_height: 15\n\ntop_young_subzones &lt;- popdata_cleaned %&gt;%\n  filter(Age_Group == \"Teens (13-17)\") %&gt;%\n  arrange(desc(Total_Population)) %&gt;%\n  slice_head(n = 10)\n\n# Plot\ny3 &lt;- ggplot(top_young_subzones, \n             aes(x = reorder(Subzone, Total_Population), \n                 y = Total_Population, \n                 fill = Planning_Area)) +\n  geom_col() +\n  geom_text(aes(label = Total_Population), \n            hjust = -0.1, size = 3.5) +\n  coord_flip() +\n  labs(\n    title = \"Top 10 subzones of Teens Population (13-17)\",\n    x = NULL,\n    y = \"Number of Teens Population\"\n  ) +\n  scale_fill_grey(start = 0.3, end = 0.8) +\n  scale_x_discrete(expand = expansion(mult = c(0.05, 0.05))) +\n  scale_y_continuous(\n    breaks = seq(0, 7000, by = 1000),\n    limits = c(0, 7000),  \n    expand = c(0, 0)  \n  ) +\n  theme_bw() +\n  theme(\n    legend.position = \"none\",\n    plot.margin = margin(t=20,r=50,b=20,l=40),\n    plot.title = element_text(hjust = 0.5, face = \"bold\"),\n    plot.subtitle = element_text(hjust = 0.5),\n    axis.title.y = element_text(margin = margin(r = 10)),\n    axis.title.x = element_text(margin = margin(t = 10)),\n    panel.grid.major.y = element_blank(),\n    panel.grid.major.x = element_line(color = \"gray80\"),\n    axis.text = element_text(size = 10)\n  )\ny3\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\ntop_working_subzones &lt;- popdata_cleaned %&gt;%\n  filter(Age_Group == \"Working Adults (18-64)\") %&gt;%\n  arrange(desc(Total_Population)) %&gt;%\n  slice_head(n = 10)\n\n# Plot\na1 &lt;- ggplot(top_working_subzones, \n             aes(x = reorder(Subzone, Total_Population), \n                 y = Total_Population, \n                 fill = Planning_Area)) +\n  geom_col() +\n  geom_text(aes(label = Total_Population), \n            hjust = -0.1, size = 3.5) +\n  coord_flip() +\n  labs(\n    title = \"Top 10 subzones of Working Adults Population (18-64)\",\n    x = NULL,\n    y = \"Number of Working Adults\"\n  ) +\n  scale_fill_grey(start = 0.3, end = 0.8) +\n  scale_x_discrete(expand = expansion(mult = c(0.05, 0.05))) +\n  scale_y_continuous(\n    breaks = seq(0, 100000, by = 10000),\n    limits = c(0, 100000),  \n    expand = c(0, 0),\n    labels = scales::comma\n  ) +\n  theme_bw() +\n  theme(\n    legend.position = \"none\",\n    plot.margin = margin(t=20,r=50,b=20,l=40),\n    plot.title = element_text(hjust = 0.5, face = \"bold\"),\n    plot.subtitle = element_text(hjust = 0.5),\n    axis.title.y = element_text(margin = margin(r = 10)),\n    axis.title.x = element_text(margin = margin(t = 10)),\n    panel.grid.major.y = element_blank(),\n    panel.grid.major.x = element_line(color = \"gray80\"),\n    axis.text = element_text(size = 10)\n  )\n\na1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n💡 Observations\n\n\n\nTampines (Tampines North, Tampines East & Tampines West) is found to have the highest number of young, youth and elderly population where they are all within the top 10 subzones in all 3 group categories.\nBedok North and Tampines East and West seems to have the highest elderly proportion compared to the other areas where they amount to be the top 3 subzones.\nAs for the young populations, Tampines East, Tampines North and Woodlands East are the top 3 areas with the highest proportion.\nTampines East, Woodlands East and Fernvale are the top 3 subzones for youth population.\nWhen comparing between the youth (5-12 years) and young (0-4 years) age groups, they have similarities where Tampines East and Woodlands East are within the top 3 subzones for these two age groups. In addition, the youth has almost double the number as compared to the young population in both of these two zones as shown in the above comparison plot."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#dependency-ratio-by-subzones",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#dependency-ratio-by-subzones",
    "title": "Take-home_Ex01",
    "section": "6.1 Dependency ratio by subzones",
    "text": "6.1 Dependency ratio by subzones\n\n\n\n\n\n\n\n\n\n\n💡 Observations\n\n\n\nBased on the heat map results, the dependency ratio for the subzones are between 0.20 and 0.45 (every 10 working adults, 4 dependents) which is relatively low and suggests that the working population is currently sufficient to support the dependent population in these subzones.\nThere is less strain on social services such as healthcare and education as well as the economy as there is a larger working adult population.\nFor urban planning, the infrastructure for dependents such as the childcare centers, schools and eldercare facilities are not an immediate priority."
  },
  {
    "objectID": "In-class_Ex/In-class_Ex04/In-class_Ex04.html",
    "href": "In-class_Ex/In-class_Ex04/In-class_Ex04.html",
    "title": "In-class_Ex04",
    "section": "",
    "text": "Recap:\n\nTake home exercise 2: Do mini challenge 1 - analyze on the various questions shown, do not need to do the reflection questions\nTake home exercise 3: To do a prototype: deadline - 15th June (try to do it asap before week 8 so that can proceed to the project), come up with a storyboard and necessary R packages in the Shiny environment, don’t need to build up the whole application\n\n\n\n\nLesson 4\n\nTwo sample mean - EDA, need to do sampling test regardless of sample size (n &gt;30 still need to do!)\nUse this website to have best practices and reference for ggstatsplot here.\nOne-way Anova:\nTo compare between different plots use pairwise.comparisons\nfor pairwise.display there are 3 types to use as shown below.\n\n\n“ns” → only non-significant\n“s” → only significant\n“all” → everything\n\n\nggridges - refer to here.\nTo use facet_wrap() if you want to compare based on each baseline as shown in the image below. Note: will be displayed into different charts.\n\n\n\n\nFacet-wrap by species each density curve by baseline\n\n\n\nHalf-Eye Plot: Violin Plot is divided in half, and then used boxplot to show the median, max and min points as well as dot plot to show the number of data points\nHOPS:\nWhen moves slower, means more certain about the data sets and bigger sample size with smaller variability.\nWhen moves faster, means less certain about the data sets and smaller sample size and bigger variability,"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex02/In-class_Ex02.html",
    "href": "In-class_Ex/In-class_Ex02/In-class_Ex02.html",
    "title": "In-class_Ex02",
    "section": "",
    "text": "Recap:\n\n# add in the following to not have truncated words on figures into your Hands-on Exercises\n\n##| echo: false \n##| fig-height: 12\n##| fig-width: 7\n\n#ggtitle(stringr::str_wrap(\"This is a very long sentence and this should make it become two lines instead of it being cut off\"))  ## add this into your title in your ggplot"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html",
    "title": "Hands-on_Ex05",
    "section": "",
    "text": "In this exercise, I will be learning how to model, analyze and visualize network data using R.\nBy the end of this hands-on exercise, I will be able to:\n\ncreate graph object data frames, manipulate them using appropriate functions of dplyr, lubridate, and tidygraph,\nbuild network graph visualisation using appropriate functions of ggraph,\ncompute network geometrics using tidygraph,\nbuild advanced graph visualisation by incorporating the network geometrics, and\nbuild interactive network visualisation using visNetwork package."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#wrangle-time",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#wrangle-time",
    "title": "Hands-on_Ex05",
    "section": "Wrangle Time",
    "text": "Wrangle Time\n\n\nCode\nGAStech_edges &lt;- GAStech_edges %&gt;%\n  mutate(SendDate = dmy(SentDate)) %&gt;%\n  mutate(Weekday = wday(SentDate,\n                        label = TRUE,\n                        abbr = FALSE))\n\nglimpse(GAStech_edges)\n\n\nRows: 9,063\nColumns: 10\n$ source      &lt;dbl&gt; 43, 43, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 26, 26, 26…\n$ target      &lt;dbl&gt; 41, 40, 51, 52, 53, 45, 44, 46, 48, 49, 47, 54, 27, 28, 29…\n$ SentDate    &lt;chr&gt; \"6/1/2014\", \"6/1/2014\", \"6/1/2014\", \"6/1/2014\", \"6/1/2014\"…\n$ SentTime    &lt;time&gt; 08:39:00, 08:39:00, 08:58:00, 08:58:00, 08:58:00, 08:58:0…\n$ Subject     &lt;chr&gt; \"GT-SeismicProcessorPro Bug Report\", \"GT-SeismicProcessorP…\n$ MainSubject &lt;chr&gt; \"Work related\", \"Work related\", \"Work related\", \"Work rela…\n$ sourceLabel &lt;chr&gt; \"Sven.Flecha\", \"Sven.Flecha\", \"Kanon.Herrero\", \"Kanon.Herr…\n$ targetLabel &lt;chr&gt; \"Isak.Baza\", \"Lucas.Alcazar\", \"Felix.Resumir\", \"Hideki.Coc…\n$ SendDate    &lt;date&gt; 2014-01-06, 2014-01-06, 2014-01-06, 2014-01-06, 2014-01-0…\n$ Weekday     &lt;ord&gt; Friday, Friday, Friday, Friday, Friday, Friday, Friday, Fr…\n\n\n1"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#wrangle-attributes",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#wrangle-attributes",
    "title": "Hands-on_Ex05",
    "section": "Wrangle Attributes",
    "text": "Wrangle Attributes\n\n\nCode\nGAStech_edges_aggregated &lt;- GAStech_edges %&gt;%\n  filter(MainSubject == \"Work related\") %&gt;%\n  group_by(source, target, Weekday) %&gt;%\n    summarise(Weight = n()) %&gt;%\n  filter(source!=target) %&gt;%\n  filter(Weight &gt; 1) %&gt;%\n  ungroup()\n\nglimpse(GAStech_edges_aggregated)\n\n\nRows: 1,372\nColumns: 4\n$ source  &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,…\n$ target  &lt;dbl&gt; 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 6,…\n$ Weekday &lt;ord&gt; Sunday, Monday, Tuesday, Wednesday, Friday, Sunday, Monday, Tu…\n$ Weight  &lt;int&gt; 5, 2, 3, 4, 6, 5, 2, 3, 4, 6, 5, 2, 3, 4, 6, 5, 2, 3, 4, 6, 5,…\n\n\n2"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#build-tidygraph-data-model",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#build-tidygraph-data-model",
    "title": "Hands-on_Ex05",
    "section": "Build tidygraph data model",
    "text": "Build tidygraph data model\n\n\nCode\nGAStech_graph &lt;- tbl_graph(nodes = GAStech_nodes,\n                           edges = GAStech_edges_aggregated, \n                           directed = TRUE)\n\nGAStech_graph\n\n\n# A tbl_graph: 54 nodes and 1372 edges\n#\n# A directed multigraph with 1 component\n#\n# Node Data: 54 × 4 (active)\n      id label               Department     Title                               \n   &lt;dbl&gt; &lt;chr&gt;               &lt;chr&gt;          &lt;chr&gt;                               \n 1     1 Mat.Bramar          Administration Assistant to CEO                    \n 2     2 Anda.Ribera         Administration Assistant to CFO                    \n 3     3 Rachel.Pantanal     Administration Assistant to CIO                    \n 4     4 Linda.Lagos         Administration Assistant to COO                    \n 5     5 Ruscella.Mies.Haber Administration Assistant to Engineering Group Mana…\n 6     6 Carla.Forluniau     Administration Assistant to IT Group Manager       \n 7     7 Cornelia.Lais       Administration Assistant to Security Group Manager \n 8    44 Kanon.Herrero       Security       Badging Office                      \n 9    45 Varja.Lagos         Security       Badging Office                      \n10    46 Stenig.Fusil        Security       Building Control                    \n# ℹ 44 more rows\n#\n# Edge Data: 1,372 × 4\n   from    to Weekday Weight\n  &lt;int&gt; &lt;int&gt; &lt;ord&gt;    &lt;int&gt;\n1     1     2 Sunday       5\n2     1     2 Monday       2\n3     1     2 Tuesday      3\n# ℹ 1,369 more rows\n\n\nCode\nGAStech_graph %&gt;%\n  activate(edges) %&gt;%\n  arrange(desc(Weight))\n\n\n# A tbl_graph: 54 nodes and 1372 edges\n#\n# A directed multigraph with 1 component\n#\n# Edge Data: 1,372 × 4 (active)\n    from    to Weekday   Weight\n   &lt;int&gt; &lt;int&gt; &lt;ord&gt;      &lt;int&gt;\n 1    40    41 Saturday      13\n 2    41    43 Monday        11\n 3    35    31 Tuesday       10\n 4    40    41 Monday        10\n 5    40    43 Monday        10\n 6    36    32 Sunday         9\n 7    40    43 Saturday       9\n 8    41    40 Monday         9\n 9    19    15 Wednesday      8\n10    35    38 Tuesday        8\n# ℹ 1,362 more rows\n#\n# Node Data: 54 × 4\n     id label           Department     Title           \n  &lt;dbl&gt; &lt;chr&gt;           &lt;chr&gt;          &lt;chr&gt;           \n1     1 Mat.Bramar      Administration Assistant to CEO\n2     2 Anda.Ribera     Administration Assistant to CFO\n3     3 Rachel.Pantanal Administration Assistant to CIO\n# ℹ 51 more rows"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#footnotes",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#footnotes",
    "title": "Hands-on_Ex05",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nThings to take note from the code chunk above\n\nBoth dmy() and wday() are functions of lubridate package that is easier to work with dates and times\ndmy() - transform SentDate to Date data type and\nwday() - returns day of week as decimal number/ordered factor if label is TRUE. If FALSE, kept days spelled in full i.e. Monday. The function will create a new column in the data frame.\n\n↩︎\nThings to learn from code chunk:\n\nfilter(), group(), summarise() and ungroup() from dplyr package are used\nnew field called weight has been added into the data frame\n\n↩︎\nThings to learn from the code chunk above:\n\ngeom_node_point is equivalent in functionality to geo_point of ggplot2. It allows for simple plotting of nodes in different shapes, colours and sizes. In the codes chnuks above colour and size are used.\n\n↩︎\nThings to learn from code chunks above:\n- geom_edge_link draws edges in the simplest way - as straight lines between the start and end nodes. But, it can do more that that. In the example above, argument width is used to map the width of the line in proportional to the Weight attribute and argument alpha is used to introduce opacity on the line.↩︎\nThings to learn from the code chunk above:\n\nmutate() of dplyr is used to perform the computation.\nthe algorithm used, on the other hand, is the centrality_betweenness() of tidygraph.\n\n↩︎"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html",
    "title": "Hands-on_Ex03",
    "section": "",
    "text": "I will be learning how to create interactive data visualization by using functions provided by ggiraph and plotlyr packages.\nI will also be learning how to create animated data visualization by using gganimate and plotly r packages. In addition, I will be able to reshape data using tidyr package, and (ii) process, wrangle and transform data by using dplyr package."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#install-launch-r-packages",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#install-launch-r-packages",
    "title": "Hands-on_Ex03",
    "section": "1.1.1. Install & Launch R packages",
    "text": "1.1.1. Install & Launch R packages\nInstall and Launch the following R packages:\n\nggiraph for making ‘ggplot’ graphics interactive.\nplotly, R library for plotting interactive statistical graphs.\nDT provides an R interface to the JavaScript library DataTables that create interactive table on html page.\ntidyverse, a family of modern R packages specially designed to support data science, analysis and communication task including creating static statistical graphs.\npatchwork for combining multiple ggplot2 graphs into one figure.\n\n\npacman::p_load(ggiraph, plotly, \n               patchwork, DT, tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#import-data",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#import-data",
    "title": "Hands-on_Ex03",
    "section": "1.1.2. Import Data",
    "text": "1.1.2. Import Data\nThe code chunk below read_csv() of readr package will import the Exam_data.csv and save as exam_data as a tibble data frame.\n\nexam_data &lt;- read_csv(\"data/Exam_data.csv\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#install-and-launch-r-packages",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#install-and-launch-r-packages",
    "title": "Hands-on_Ex03",
    "section": "1.2.1. Install and launch R packages",
    "text": "1.2.1. Install and launch R packages\nInstall and Launch the following R packages:\n\nplotly, R library for plotting interactive statistical graphs.\ngganimate, an ggplot extension for creating animated statistical graphs.\ngifski converts video frames to GIF animations using pngquant’s fancy features for efficient cross-frame palettes and temporal dithering. It produces animated GIFs that use thousands of colors per frame.\ngapminder: An excerpt of the data available at Gapminder.org. We just want to use its country_colors scheme.\ntidyverse, a family of modern R packages specially designed to support data science, analysis and communication task including creating static statistical graphs.\n\n\npacman::p_load(readxl, gifski, gapminder,\n               plotly, gganimate, tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#import-data-1",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#import-data-1",
    "title": "Hands-on_Ex03",
    "section": "1.2.2 Import Data",
    "text": "1.2.2 Import Data\nImport data worksheet from GlobalPopulation Excel workbook.\n\ncol &lt;- c(\"Country\", \"Continent\")\nglobalPop &lt;- read_xls(\"data/GlobalPopulation.xls\", sheet=\"Data\")%&gt;%\n  mutate_each_(funs(factor(.)), col) %&gt;%\n  mutate(Year = as.integer(Year))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#ggiraph-methods",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#ggiraph-methods",
    "title": "Hands-on_Ex03",
    "section": "2.1.1 ggiraph Methods",
    "text": "2.1.1 ggiraph Methods\n\nTooltip: a column of datasets that contain tooltips to be displayed when the mouse is over elements\nData_id: a column of datasets that contain an id to be associated with elements.\nOnclick: a column of datasets that contain JavaScript function to be executed when elements are clicked.\n\n\n2.1.1.1 Tooltip effect\nThere are two steps that are needed (Step 1 and 2),\n\nInteractive version of ggplot2 is used to create the basic graph\ngirafe() is then utilized to generate an svg object to be displayed on an html page\nCustomize tooltip style\nDisplay statistics on tooltip\n\n\nStep 1: Basic graphStep 2: Add in tooltip effectStep 3: Customization tooltip styleStep 4: Statistics using tooltip\n\n\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = ID),\n    stackgroups = TRUE, \n    binwidth = 1, \n    method = \"histodot\") +\n  scale_y_continuous(NULL, \n                     breaks = NULL)\np#\n\n\n\n\n\n\n\n\n\n\nBy using the tooltip effect, there is interactivity by hovering the mouse pointer on an data point of interest where the information listed such as the student’s ID will be displayed.\nWe are able to display multiple information such as Name, Class, Race and Gender on tooltip as shown in the code chunk below.\n\nexam_data$tooltip &lt;- c(paste0(\"Name =\", exam_data$ID, \"\\n Class =\", exam_data$CLASS, \"\\n Race =\", exam_data$RACE, \"\\n Gender =\", exam_data$GENDER))\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = exam_data$tooltip), \n    stackgroups = TRUE,\n    binwidth = 1,\n    method = \"histodot\") +\n  scale_y_continuous(NULL,          \n                     breaks = NULL)\n\ngirafe(\n  ggobj = p,\n  width_svg = 6,\n  height_svg = 6*0.618\n)\n\n\n\n\n\n\n\nOne example uses opts_tooltip() of ggiraph by adding in css declarations such as changing the background and font colours.\n\ntooltip_css &lt;- \"background-color:white; #&lt;&lt;\nfont-style:bold; color:black;\" #&lt;&lt;\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(         \n    aes(tooltip = ID),              \n    stackgroups = TRUE,             \n    binwidth = 1,                   \n    method = \"histodot\") +          \n  scale_y_continuous(NULL, breaks = NULL)\n\ngirafe(                             \n  ggobj = p,                        \n  width_svg = 6,                    \n  height_svg = 6*0.618,\n  options = list(    #&lt;&lt;\n    opts_tooltip(    #&lt;&lt;\n      css = tooltip_css)) #&lt;&lt;\n)                               \n\n\n\n\n\n\n\nStatistics such as the 90% confident interval of the mean can be computed and displayed as shown in the code chunk below.\n\ntooltip &lt;- function(y, ymax, accuracy = .01) {\n  mean &lt;- scales::number(y, accuracy = accuracy)\n  sem &lt;- scales::number(ymax - y, accuracy = accuracy)\n  paste(\"Mean maths scores:\", mean, \"+/-\", sem)\n}\n\ngg_point &lt;- ggplot(data=exam_data, \n                   aes(x = RACE),\n) +\n  stat_summary(aes(y = MATHS, \n                   tooltip = after_stat(  \n                     tooltip(y, ymax))),  \n    fun.data = \"mean_se\", \n    geom = GeomInteractiveCol,  \n    fill = \"light blue\"\n  ) +\n  stat_summary(aes(y = MATHS),\n    fun.data = mean_se,\n    geom = \"errorbar\", width = 0.2, size = 0.2\n  )\n\ngirafe(ggobj = gg_point,\n       width_svg = 8,\n       height_svg = 8*0.618)\n\n\n\n\n\n\n\n\n\n\n2.1.1.2 data_id aesthetic\nThe code chunk below shows the hover effect that data_id can shown as one of the interactive features of ggiraph.\n\nDefaultHover effectStyling hover effect (Change highlighted effect)Combination tooltip & hover effect\n\n\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = ID),\n    stackgroups = TRUE, \n    binwidth = 1, \n    method = \"histodot\") +\n  scale_y_continuous(NULL, \n                     breaks = NULL)\ngirafe(                                 \n  ggobj = p,                            \n  width_svg = 6,                        \n  height_svg = 6*0.618                  \n)  \n\n\n\n\n\n\n\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(           \n    aes(data_id = CLASS),   #default value of hover css fill is orange          \n    stackgroups = TRUE,               \n    binwidth = 1,                       \n    method = \"histodot\") +              \n  scale_y_continuous(NULL,              \n                     breaks = NULL)\n\ngirafe(                                 \n  ggobj = p,                            \n  width_svg = 6,                        \n  height_svg = 6*0.618                  \n)                                        \n\n\n\n\n\n\n\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(             \n    aes(data_id = CLASS),              \n    stackgroups = TRUE,                 \n    binwidth = 1,                       \n    method = \"histodot\") +              \n  scale_y_continuous(NULL,              \n                     breaks = NULL)\n\ngirafe(                                 \n  ggobj = p,                            \n  width_svg = 6,                        \n  height_svg = 6*0.618,\n  options = list(                       \n    opts_hover(css = \"fill: #202020;\"), \n    opts_hover_inv(css = \"opacity:0.2;\")\n  )                                     \n)                                        \n\n\n\n\n\n\n\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(         \n    aes(tooltip = CLASS, \n        data_id = CLASS),           \n    stackgroups = TRUE,             \n    binwidth = 1,                   \n    method = \"histodot\") +          \n  scale_y_continuous(NULL,          \n                     breaks = NULL)\n\ngirafe(                             \n  ggobj = p,                        \n  width_svg = 6,                    \n  height_svg = 6*0.618,\n  options = list(                   \n    opts_hover(css = \"fill: #202020;\"),  \n    opts_hover_inv(css = \"opacity:0.2;\") \n  )                                 \n)                                   \n\n\n\n\n\n\n\n\n\n\n2.1.1.3 Onclick\nThis provides hotlink interactivity on the web when using the onclick argument of ggiraph where there is a web document link with a data object displayed on the top right hand corner of the figure upon mouse click.\n\nexam_data$onclick &lt;- sprintf(\"window.open(\\\"%s%s\\\")\",\n\"https://www.moe.gov.sg/schoolfinder?journey=Primary%20school\",\nas.character(exam_data$ID))\n\n## click actions need to be a \"str\" column containing javascript instructions\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(             \n    aes(onclick = onclick),             \n    stackgroups = TRUE,                 \n    binwidth = 1,                       \n    method = \"histodot\") +              \n  scale_y_continuous(NULL,              \n                     breaks = NULL)\n\ngirafe(                                 \n  ggobj = p,                            \n  width_svg = 6,                        \n  height_svg = 6*0.618)                                        \n\n\n\n\n\n\n\n2.1.1.4 Coordinated Multiple Views with ggiraph\n\nUse interactive functions of ggiraph such as data_id aesthetic to link observations and tooltip aesthetic to hover over a point with a mouse\nCombine it with patchwork learned in Hands-on Exercise 2\n\n\np1 &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(data_id = ID),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +  \n  coord_cartesian(xlim=c(0,100)) + \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\n\np2 &lt;- ggplot(data=exam_data, \n       aes(x = ENGLISH)) +\n  geom_dotplot_interactive(              \n    aes(data_id = ID),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") + \n  coord_cartesian(xlim=c(0,100)) + \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\n\ngirafe(code = print(p1 + p2), \n       width_svg = 6,\n       height_svg = 3,\n       options = list(\n         opts_hover(css = \"fill: #202020;\"),\n         opts_hover_inv(css = \"opacity:0.2;\")\n         )\n       )"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#plotly-methods",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#plotly-methods",
    "title": "Hands-on_Ex03",
    "section": "2.1.2 plotly Methods",
    "text": "2.1.2 plotly Methods\nThere are two ways to use plotly:\n\nusing plot_ly()\nusing ggploty()\n\n\nCreate an interactive plot: plot_ly()Create an interactive plot: ggplotly()\n\n\n\nplot_ly(data = exam_data, \n             x = ~MATHS, \n             y = ~GENDER,\n            colour = ~RACE)\n\n\n\n\n\n\n\nFrom using the functions subplot() and highlight_key(), I am able to compare results of students’ scores for Math, Science and English. I am also able to pinpoint any student by click on a data point of any one of the scatterplots to see the students’ scores.\n\nhightlight_key() is used to share data and creates an object of class crosstalk\nsubplot() helps to place plots side by side\n\n\nd &lt;- highlight_key(exam_data)\n\np1 &lt;- ggplot(data=d,\n            aes(x = ENGLISH,\n                y = SCIENCE)) +\n  geom_point(size=1) + \n  coord_cartesian(xlim=c(0,100), \n                  ylim=c(0,100))\np2 &lt;- ggplot(data=d, \n             aes(x = ENGLISH,\n                y = MATHS)) +\n      geom_point(size=1) +\n      coord_cartesian(xlim=c(0,100), \n                  ylim=c(0,100))\n\nsubplot(ggplotly(p1),\n        ggplotly(p2))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#crosstalk-methods",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#crosstalk-methods",
    "title": "Hands-on_Ex03",
    "section": "2.1.3 crosstalk Methods",
    "text": "2.1.3 crosstalk Methods\nCrosstalk is an add-on to the htmlwidgets package. It extends htmlwidgets with a set of classes, functions and conventions for implementing cross-widgets interactions (currently, linked brushing and filtering). ::: panel-tabset ### 2.1.3.1 Interactive Data Table: DT package\n\nA wrapper of JavaScript Library DataTables\nData objects in R can be rendered as HTML tables using JavaScript library “DataTables” via R Markdown or Shiny.\n\n\nDT::datatable(exam_data, class = \"compact\")\n\n\n\n\n\n\n2.1.3.2 Linked brushing\nCode chunk below is used to implement the coordinated brushing.\n\nhighlight() sets a variety of options for brushing (i.e. highlight) multiple plots. It is primarily designed to link multiple plotly graphs together and may not behaved as expected when linking plotly to another htmlwidget package via crosstalk. Some cases such as persistent selection in leaflet, other htmlwidgets will respect the options.\nbscols() is a helper function of crosstalk by putting HTML elements next to each other. It can be called directly from the console but is designed specifically for R Markdown.\n\n\nd &lt;- highlight_key(exam_data)\n\np &lt;- ggplot(d, \n            aes(ENGLISH, MATHS)) +\n    geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\n\ngg &lt;- highlight(ggplotly(p), \n                \"plotly_selected\")\n\ncrosstalk::bscols(gg, DT::datatable(d), widths = 5)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n:::"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#terminology",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#terminology",
    "title": "Hands-on_Ex03",
    "section": "3.1 Terminology",
    "text": "3.1 Terminology\nFrom this visualization type, we need to understand some key concepts and terminology used in this type of visualization.\n\nFrame: In an animated line graph, each frame represents a different point in time or a different category. When the frame changes, the data points on the graph are updated to reflect the new data.\nAnimation Attributes: The animation attributes are the settings that control how the animation behaves. For example, you can specify the duration of each frame, the easing function used to transition between frames, and whether to start the animation from the current frame or from the beginning."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#gganimate-methods",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#gganimate-methods",
    "title": "Hands-on_Ex03",
    "section": "3.2 gganimate Methods",
    "text": "3.2 gganimate Methods\ngganimate brings your static ggplot2 plots to life, turning them into animations. Some key components to note are explained simply below:\nImagine you’re animating a bouncing ball with ggplot2:\n\ntransition_time() decides when and where the ball moves (frame by frame).\nview_follow() makes the camera follow the ball.\nshadow_mark() shows the ball’s trail as it bounces.\nenter_bounce() makes the ball bounce into view.\nease_aes() makes the motion look smooth and natural — not robotic.\n\n\n3.2.1 Static bubble plots\n\ntransition_time() of gganimate is used to create transition through distinct states in time (i.e. Year).\nease_aes() is used to control easing of aesthetics. The default is linear. Other methods are: quadratic, cubic, quartic, quintic, sine, circular, exponential, elastic, back, and bounce.\n\n\nDefault static bubble plotAnimated bubble plot\n\n\n\nggplot(globalPop, aes(x = Old, y = Young, \n                      size = Population, \n                      colour = Country)) +\n  geom_point(alpha = 0.7, \n             show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(title = 'Year: {frame_time}', \n       x = '% Aged', \n       y = '% Young') \n\n\n\n\n\n\n\n\n\n\n\nggplot(globalPop, aes(x = Old, y = Young, \n                      size = Population, \n                      colour = Country)) +\n  geom_point(alpha = 0.7, \n             show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(title = 'Year: {frame_time}', \n       x = '% Aged', \n       y = '% Young') +\n  transition_time(Year) +       \n  ease_aes('linear')          \n\n\n\n\n\n\n\n\n\n\n\n\n\n3.2.2 plotly Methods\nIn Plotly R package, both ggplotly() and plot_ly() support key frame animations through the frame argument/aesthetic. They also support an ids argument/aesthetic to ensure smooth transitions between objects with the same id (which helps facilitate object constancy).\n\nggplotly() animated (legend shown)ggplotly() animated (legend not shown)plot_ly()\n\n\n\ngg &lt;- ggplot(globalPop, \n       aes(x = Old, \n           y = Young, \n           size = Population, \n           colour = Country)) +\n  geom_point(alpha = 0.7) + ## aes(frame & size) not working w ggplot anymore\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(x = '% Aged', \n       y = '% Young')\n\nggplotly(gg)\n\n\n\n\n\n\n\n\ngg &lt;- ggplot(globalPop, \n       aes(x = Old, \n           y = Young, \n           size = Population, \n           colour = Country)) +\n  geom_point(alpha = 0.7) + # aes(size = Population, frame = Year) not working\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(x = '% Aged', \n       y = '% Young') + \n  theme(legend.position='none') #removes legend\n\nggplotly(gg)\n\n\n\n\n\n\n\n\nbp &lt;- globalPop %&gt;%\n  plot_ly(x = ~Old, \n          y = ~Young, \n          size = ~Population, \n          color = ~Continent,\n          sizes = c(2, 100),\n          frame = ~Year, \n          text = ~Country, \n          hoverinfo = \"text\",\n          type = 'scatter',\n          mode = 'markers'\n          ) %&gt;%\n  layout(showlegend = FALSE)\nbp"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html",
    "title": "Hands-on Exercise 1",
    "section": "",
    "text": "The code chunk below uses p_load() of pacman package to check if tidyverse packages are installed in the computer. If they are, then they will be launched into R.\n\npacman::p_load(tidyverse)\n\n\n\n\n\nexam_data &lt;- read_csv(\"data/Exam_data.csv\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#install-and-launch-r-packages",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#install-and-launch-r-packages",
    "title": "Hands-on Exercise 1",
    "section": "",
    "text": "The code chunk below uses p_load() of pacman package to check if tidyverse packages are installed in the computer. If they are, then they will be launched into R.\n\npacman::p_load(tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#importing-the-data",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#importing-the-data",
    "title": "Hands-on Exercise 1",
    "section": "",
    "text": "exam_data &lt;- read_csv(\"data/Exam_data.csv\")"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "Hi! My Name is Shermainn and I am a Masters’ degree student from Singapore Management University in IT Business majoring in Financial Technology and Analytics. I love trying new foods and travelling to new places."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html",
    "title": "Hands-on Exercise 2",
    "section": "",
    "text": "In this exercise, I will be learning on how to:\n\nControl the placement of annotation on a graph using functions provided in ggrepel package\nCreate professional publication quality figures using functions provided in ggthemes and hrbrthemes packages\nPlot composite figures by combining ggplot2 graphs using patchwork package"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#install-and-load-required-libraries",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#install-and-load-required-libraries",
    "title": "Hands-on Exercise 2",
    "section": "2.1. Install and Load required libraries",
    "text": "2.1. Install and Load required libraries\nCode chunk below is used to check if all 4 R packages (ggrepel, ggthemes, hrbrthemes & patchwork) are installed and loaded onto the environment.\n\npacman::p_load(ggrepel, patchwork, \n               ggthemes, hrbrthemes,\n               tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#import-data",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#import-data",
    "title": "Hands-on Exercise 2",
    "section": "2.2. Import data",
    "text": "2.2. Import data\n\nexam_data &lt;- read_csv(\"data/Exam_data.csv\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#notched-boxplot",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#notched-boxplot",
    "title": "Hands-on Exercise 2",
    "section": "7.1. Notched Boxplot",
    "text": "7.1. Notched Boxplot\nUsing Patchwork, I will using a notched boxplot to find the sample mean of the distribution of English scores and Math scores based on gender (female and male). From using the patchwork package, I am able to see the box-plot diagrams side by side which is much easier to make comparisons and the boxplot diagrams allow me to determine that the mean scores for Math between both genders are similar whereas for English scores, females have a higher mean score as compared to males. I added in ggtheme (theme_excel()) so that the diagram is visually more readable.\n\nNotched Boxplot of English and Math ScoresPatchwork of English and Math scores\n\n\n\nm1 &lt;- ggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_boxplot(notch=TRUE)\ne1 &lt;- ggplot(data=exam_data, \n       aes(y = ENGLISH, \n           x= GENDER)) +\n  geom_boxplot(notch=TRUE) \ne1#\n\n\n\n\n\n\n\n\n\n\n\npatchwork &lt;- m1 + e1 \npatchwork & theme_excel()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#violin-plot",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#violin-plot",
    "title": "Hands-on Exercise 2",
    "section": "7.2. Violin Plot",
    "text": "7.2. Violin Plot\nTo compare the different scores between English, Science and Math among the different students, I used a violin plot to compare them. To find out the number of students that scored a higher score of above 90, we will be using ggrepel to find out the number of students that score that.\n\nDefault violin plot by gender and subjectsStudents that scored more than 90 in each subject (using ggrepel)Patchwork of students that scored more than 90 in each subject\n\n\n\nexam_long &lt;- exam_data %&gt;%\n  pivot_longer(cols = c(ENGLISH, MATHS, SCIENCE),\n               names_to = \"Subject\",\n               values_to = \"Score\")\n\nggplot(exam_long, aes(x = Subject, y = Score, fill = Subject)) +\n  geom_violin(trim = FALSE, alpha = 0.7) +\n  geom_jitter(width = 0.1, alpha = 0.3, size = 1, color = \"black\") +\n  facet_wrap(~GENDER) +\n  labs(title = \"Score Distribution by Students\",\n       x = \"Subject\",\n       y = \"Score\") +\n  theme(legend.position = \"none\") \n\n\n\n\n\n\n\n\n\n\nFrom the results, it is seen that there are 17 students from each gender that scored more than 90 in Math but there are 5 students and 3 students that scored above 90 for English and Science respectively. It is also shown that there are more female students (4) who scored 90 as compared to male students (only 1) in English and there is more male students (2) that scored more than 90 in Science as compared to female students (only 1).\n\nexam_long &lt;- exam_data %&gt;%\n  pivot_longer(cols = c(ENGLISH),\n               names_to = \"Subject\",\n               values_to = \"Score\")\n\n\nhighlight_data &lt;- exam_long %&gt;%\n  filter(Score &gt; 90)\n\ne2 &lt;- ggplot(exam_long, aes(x = Subject, y = Score, fill = GENDER)) +\n  geom_violin(trim = FALSE, alpha = 0.7, position = position_dodge(width = 0.9)) +\n  geom_jitter(\n    aes(color = GENDER),\n    alpha = 0.3,\n    size = 1,\n    position = position_jitterdodge(jitter.width = 0.15, dodge.width = 0.9)\n  )  +\n\n  # Add ggrepel labels for top scorers\n  geom_label_repel(\n    data = highlight_data,\n    aes(label = ID, color = GENDER),\n    position = position_jitterdodge(jitter.width = 0.15, dodge.width = 0.9),\n    fontface = \"bold\",\n    size = 3,\n    box.padding = 0.4,\n    label.padding = 0.3,     # Padding inside the box\n    label.size = 0.3,        # Thickness of the box border\n    fill = \"white\",          # Background color of the label\n    max.overlaps = 60,\n    show.legend = FALSE\n  ) +\n  labs(\n    title = \"English Scores based on Gender\",\n    subtitle = \"Labels for students who scored above 90\",\n    x = \"Subject\",\n    y = \"Score\"\n  ) \ne2#\n\n\n\n\n\n\n\n\n\nexam_long &lt;- exam_data %&gt;%\n  pivot_longer(cols = c(MATHS),\n               names_to = \"Subject\",\n               values_to = \"Score\")\n\n\nhighlight_data &lt;- exam_long %&gt;%\n  filter(Score &gt; 90)\n\nm2 &lt;- ggplot(exam_long, aes(x = Subject, y = Score, fill = GENDER)) +\n  geom_violin(trim = FALSE, alpha = 0.7, position = position_dodge(width = 0.9)) +\n  geom_jitter(\n    aes(color = GENDER),\n    alpha = 0.3,\n    size = 1,\n    position = position_jitterdodge(jitter.width = 0.15, dodge.width = 0.9)\n  )  +\n\n  # Add ggrepel labels for top scorers\n  geom_label_repel(\n    data = highlight_data,\n    aes(label = ID, color = GENDER),\n    position = position_jitterdodge(jitter.width = 0.15, dodge.width = 0.9),\n    fontface = \"bold\",\n    size = 3,\n    box.padding = 0.4,\n    label.padding = 0.3,     # Padding inside the box\n    label.size = 0.3,        # Thickness of the box border\n    fill = \"white\",          # Background color of the label\n    max.overlaps = 60,\n    show.legend = FALSE\n  ) +\n  labs(\n    title = \"Math Scores based on Gender\",\n    subtitle = \"Labels for students who scored above 90\",\n    x = \"Subject\",\n    y = \"Score\"\n  ) \nm2#\n\n\n\n\n\n\n\n\n\nexam_long &lt;- exam_data %&gt;%\n  pivot_longer(cols = c(SCIENCE),\n               names_to = \"Subject\",\n               values_to = \"Score\")\n\n\nhighlight_data &lt;- exam_long %&gt;%\n  filter(Score &gt; 90)\n\ns2 &lt;- ggplot(exam_long, aes(x = Subject, y = Score, fill = GENDER)) +\n  geom_violin(trim = FALSE, alpha = 0.7, position = position_dodge(width = 0.9)) +\n  geom_jitter(\n    aes(color = GENDER),\n    alpha = 0.3,\n    size = 1,\n    position = position_jitterdodge(jitter.width = 0.15, dodge.width = 0.9)\n  )  +\n\n  # Add ggrepel labels for top scorers\n  geom_label_repel(\n    data = highlight_data,\n    aes(label = ID, color = GENDER),\n    position = position_jitterdodge(jitter.width = 0.15, dodge.width = 0.9),\n    fontface = \"bold\",\n    size = 3,\n    box.padding = 0.4,\n    label.padding = 0.3,     # Padding inside the box\n    label.size = 0.3,        # Thickness of the box border\n    fill = \"white\",          # Background color of the label\n    max.overlaps = 60,\n    show.legend = FALSE\n  ) +\n  labs(\n    title = \"Science Scores based on Gender\",\n    subtitle = \"Labels for students who scored above 90\",\n    x = \"Subject\",\n    y = \"Score\"\n  ) \ns2#\n\n\n\n\n\n\n\n\n\n\n\n#|fig-width: 15\n#|fig-height: 7\n#|echo: false\n((s2 / e2) |  m2)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#dot-plot",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#dot-plot",
    "title": "Hands-on Exercise 2",
    "section": "7.3. Dot Plot",
    "text": "7.3. Dot Plot\nI will be plotting a dot plot to compare the results between the female and male students who scored well (above 80) in English and Math. Based on using the + sign patchworkpackage, I am able to clearly see the number of students that scored above 80 and based on the figure, it can be observed that Math has more students that scored above 80. The number of dots represent the number of students that scored above 80 for each subject respectively.\n\nDefault Dot Plotspatchwork (using + sign)\n\n\n\nhigh_english &lt;- exam_data[exam_data$ENGLISH &gt; 80, ]\ne3 &lt;- ggplot(high_english, aes(x = GENDER, y = ENGLISH)) +\n  geom_dotplot(\n    binaxis = 'y', \n    stackdir = 'center', \n    dotsize = 0.7, \n    binwidth = 1) +\n  labs(title = \"Students Scoring Above 80\",\n       x = \"Gender\",\n       y = \"English Score\") +\n  theme_excel()\ne3#\n\n\n\n\n\n\n\n\n\nhigh_math &lt;- exam_data[exam_data$MATHS &gt; 80, ]\nm3 &lt;- ggplot(high_math, aes(x = GENDER, y = MATHS)) +\n  geom_dotplot(\n    binaxis = 'y', \n    stackdir = 'center', \n    dotsize = 0.7, \n    binwidth = 1) +\n  labs(title = \"Students Scoring Above 80\",\n       x = \"Gender\",\n       y = \"Math Score\") +\n  theme_excel()\nm3#\n\n\n\n\n\n\n\n\n\n\n\ne3 + m3"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#pie-chart-and-bar-chart",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#pie-chart-and-bar-chart",
    "title": "Hands-on Exercise 2",
    "section": "7.4. Pie Chart and Bar Chart",
    "text": "7.4. Pie Chart and Bar Chart\n\nPie Chart: Number of Students based on Gender for EnglishBar Chart: Average English Score by GenderPatchwork (using “/”,“|”,“()” to combine 3 plots)Patchwork (using insert): English score by Gender\n\n\n\ngender_counts &lt;- exam_data %&gt;%\n  group_by(GENDER) %&gt;%\n  summarise(Count = n())\n\np1 &lt;- ggplot(gender_counts, aes(x = \"\", y = Count, fill = GENDER)) +\n  geom_bar(stat = \"identity\", width = 1) +\n  coord_polar(theta = \"y\") +  # This transforms the bar chart to a pie chart\n  theme_void() +  # Removes axes and background\n  labs(title = \"Number of Students in English\") +\n  theme(\n    plot.title = element_text(size = 9),\n    plot.background = element_rect(fill = \"white\")\n  )\np1#\n\n\n\n\n\n\n\n\n\n\n\navg_english &lt;- exam_data %&gt;%\n  group_by(GENDER) %&gt;%\n  summarise(Avg_English = mean(ENGLISH))\n\n# Plot\na1 &lt;- ggplot(avg_english, aes(x = GENDER, y = Avg_English)) +\n  geom_bar(stat = \"identity\") +\n  labs(title = \"Average English Score by Gender\",\n       x = \"Gender\",\n       y = \"Average Score\") +\n  theme_excel()\na1#\n\n\n\n\n\n\n\n\n\navg_maths &lt;- exam_data %&gt;%\n  group_by(GENDER) %&gt;%\n  summarise(Avg_Maths = mean(MATHS))\n\n# Plot\na2 &lt;- ggplot(avg_maths, aes(x = GENDER, y = Avg_Maths)) +\n  geom_bar(stat = \"identity\") +\n  labs(title = \"Average Maths Score by Gender\",\n       x = \"Gender\",\n       y = \"Average Score\") +\n  theme_excel()\na2#\n\n\n\n\n\n\n\n\n\navg_science &lt;- exam_data %&gt;%\n  group_by(GENDER) %&gt;%\n  summarise(Avg_Science = mean(SCIENCE))\n\n# Plot\na3 &lt;- ggplot(avg_science, aes(x = GENDER, y = Avg_Science)) +\n  geom_bar(stat = \"identity\") +\n  labs(title = \"Average Science Score by Gender\",\n       x = \"Gender\",\n       y = \"Average Score\") +\n  theme_excel()\na3#\n\n\n\n\n\n\n\n\n\n\n\na1/a2|a3\n\n\n\n\n\n\n\n\n\n\n\na1 + inset_element(p1, \n                   left = 0.7,    \n                   bottom = 0,    \n                   right = 1,     \n                   top = 0.3)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#raincloud-plot",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#raincloud-plot",
    "title": "Hands-on Exercise 2",
    "section": "7.5. Raincloud Plot",
    "text": "7.5. Raincloud Plot"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#diverging-stacked-bar-chart",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#diverging-stacked-bar-chart",
    "title": "Hands-on Exercise 2",
    "section": "7.6. Diverging Stacked Bar Chart",
    "text": "7.6. Diverging Stacked Bar Chart"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#packed-bars",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#packed-bars",
    "title": "Hands-on Exercise 2",
    "section": "7.7. Packed Bars",
    "text": "7.7. Packed Bars"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html",
    "title": "Hands-on_Ex04",
    "section": "",
    "text": "I will be using the same data across all 4 sections.\n\n\n\n\nCode\npacman::p_load(ggdist, ggridges, ggthemes,\n               colorspace, tidyverse)\n\n\n\n\n\n\n\nCode\nJakarta &lt;- read_csv(\"data/COVID-19_DKI_Jakarta.csv\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#load-packages",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#load-packages",
    "title": "Hands-on_Ex04",
    "section": "",
    "text": "Code\npacman::p_load(ggdist, ggridges, ggthemes,\n               colorspace, tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#load-data",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#load-data",
    "title": "Hands-on_Ex04",
    "section": "",
    "text": "Code\nJakarta &lt;- read_csv(\"data/COVID-19_DKI_Jakarta.csv\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#finishing-touch",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#finishing-touch",
    "title": "Hands-on_Ex04",
    "section": "Finishing Touch",
    "text": "Finishing Touch\ncoord_flip() is used to flip the chart horizontally to give a raincloud appearance.\n\n\nCode\nJakarta_filtered &lt;- Jakarta %&gt;%\n  count(City, sort = TRUE) %&gt;%\n  top_n(3, n) %&gt;%\n  inner_join(Jakarta, by = \"City\")\n\nggplot(Jakarta_filtered, \n       aes(x = City, \n           y = Death)) +\n  stat_halfeye(adjust = 0.5,\n               justification = 0,\n               .width = 0,\n               point_colour = NA) +\n        geom_boxplot(width = .1,\n               outlier.shape = NA) +\n    stat_dots(side = \"left\", \n            justification = 1.2, \n            binwidth = .5,\n            dotsize = 2) +\n  coord_flip()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#ggplot-2-methods",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#ggplot-2-methods",
    "title": "Hands-on_Ex04",
    "section": "3.1 ggplot 2 methods",
    "text": "3.1 ggplot 2 methods\n\n\nCode\npacman::p_load(plotly, crosstalk, DT, \n               ggdist, ggridges, colorspace,\n               gganimate, tidyverse)\n\n\n\nPoint Estimates - ggplot2 methodsStandard Error barsConfidence Interval of point estimatesInteractive Error Bars\n\n\n\ngroup_byb() of dplyr package - group observation by Recovered\nsummarise() computes the count of observations, mean and std.\nmutate() derives standard error of Recovered by City and\noutput is saved as my_sum\n\n\n\nCode\nmy_sum &lt;- Jakarta %&gt;%\n  group_by(City) %&gt;%\n  summarise(\n    n=n(),\n    mean=mean(Recovered),\n    sd=sd(Recovered)\n    ) %&gt;%\n  mutate(se=sd/sqrt(n-1))\n\n\n\n\nCode\nknitr::kable(head(my_sum), format = 'html')\n\n\n\n\n\nCity\nn\nmean\nsd\nse\n\n\n\n\nJAKARTA BARAT\n56\n2436.2679\n1376.4428\n185.59951\n\n\nJAKARTA PUSAT\n44\n1755.3636\n760.2751\n115.94087\n\n\nJAKARTA SELATAN\n65\n2420.9077\n1179.3163\n147.41454\n\n\nJAKARTA TIMUR\n65\n2979.4462\n1098.6139\n137.32674\n\n\nJAKARTA UTARA\n31\n3081.3548\n1322.5012\n241.45458\n\n\nKAB.ADM.KEP.SERIBU\n6\n202.3333\n103.7915\n46.41695\n\n\n\n\n\n\n\n\n\n\n\nCode\nggplot(my_sum) +\n  geom_errorbar(\n    aes(x=City, \n        ymin=mean-se, #error bars are computed\n        ymax=mean+se), \n    width=0.2, \n    colour=\"black\", \n    alpha=0.9, \n    linewidth=0.5) +\n  geom_point(aes\n           (x=City, \n            y=mean), \n           stat=\"identity\", #need to indicate this!!\n           color=\"red\",\n           size = 1.5,\n           alpha=1) +\n  ggtitle(\"Standard error of mean Recovered by City\")\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nggplot(my_sum) +\n  geom_errorbar(\n    aes(x=reorder(City, -mean), \n        ymin=mean-1.96*se, \n        ymax=mean+1.96*se), \n    width=0.2, \n    colour=\"black\", \n    alpha=0.9, \n    linewidth=0.5) +\n  geom_point(aes\n           (x=City, \n            y=mean), \n           stat=\"identity\", \n           color=\"red\",\n           size = 1.5,\n           alpha=1) +\n  labs(x = \"Recovered\",  #labs is used to change x-axis label\n       title = \"95% confidence interval of mean Recovered by City\")\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nshared_df = SharedData$new(my_sum)\n\nbscols(widths = c(4,8),\n       ggplotly((ggplot(shared_df) +\n                   geom_errorbar(aes(\n                     x=reorder(City, -mean),\n                     ymin=mean-2.58*se, \n                     ymax=mean+2.58*se), \n                     width=0.2, \n                     colour=\"black\", \n                     alpha=0.9, \n                     size=0.5) +\n                   geom_point(aes(\n                     x=City, \n                     y=mean, \n                     text = paste(\"City:\", `City`, \n                                  \"&lt;br&gt;N:\", `n`,\n                                  \"&lt;br&gt;Avg. Number:\", round(mean, digits = 2),\n                                  \"&lt;br&gt;95% CI:[\", \n                                  round((mean-2.58*se), digits = 2), \",\",\n                                  round((mean+2.58*se), digits = 2),\"]\")),\n                     stat=\"identity\", \n                     color=\"red\", \n                     size = 1.5, \n                     alpha=1) + \n                   xlab(\"City\") + \n                   ylab(\"Average Number\") + \n                   theme_minimal() + \n                   theme(axis.text.x = element_text(\n                     angle = 45, vjust = 0.5, hjust=1)) +\n                   ggtitle(\"99% Confidence interval of average /&lt;br&gt;Recovered by City\")), \n                tooltip = \"text\"), \n       DT::datatable(shared_df, \n                     rownames = FALSE, \n                     class=\"compact\", \n                     width=\"100%\", \n                     options = list(pageLength = 10,\n                                    scrollX=T), \n                     colnames = c(\"No. of people\", \n                                  \"Avg Recovered\",\n                                  \"Std Dev\",\n                                  \"Std Error\")) %&gt;%\n         formatRound(columns=c('mean', 'sd', 'se'),\n                     digits=2))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#ggdist-package",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#ggdist-package",
    "title": "Hands-on_Ex04",
    "section": "3.2 ggdist package",
    "text": "3.2 ggdist package\n\nPoint Estimates - 95% Confidence IntervalPoint Estimates - 99% Confidence Interval\n\n\n\n\nCode\nJakarta %&gt;%\n  ggplot(aes(x = City, \n             y = Death)) +\n  stat_pointinterval(.width = 0.95,\n  .point = median,\n  .interval = qi) +\n  labs(\n    title = \"Visualising confidence intervals of mean deaths\",\n    subtitle = \"Mean Point + Multiple-interval plot\")\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nJakarta %&gt;%\n  ggplot(aes(x = City, \n             y = Death)) +\n  stat_pointinterval(.width = 0.99,\n  .point = median,\n  .interval = qi) +\n  labs(\n    title = \"Visualising confidence intervals of mean deaths\",\n    subtitle = \"Mean Point + Multiple-interval plot\")\n\n\n\n\n\n\n\n\n\n\n\n\nPoint Estimates - Visuals\n\n\nCode\nJakarta %&gt;%\n  ggplot(aes(x = City, \n             y = Death)) +\n  stat_gradientinterval(\n    fill = \"skyblue\",\n    show.legend = TRUE ) +\n  labs(\n    title = \"Visualising confidence intervals of mean deaths\",\n    subtitle = \"Gradient + interval plot\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#hypothetical-outcome-plots-hops",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#hypothetical-outcome-plots-hops",
    "title": "Hands-on_Ex04",
    "section": "3.3 Hypothetical Outcome Plots (HOPs)",
    "text": "3.3 Hypothetical Outcome Plots (HOPs)\n\nInstall ungeviz package\n\n\nCode\n#everything downloaded from github just need to download once so add in the eval = False into R\ndevtools::install_github(\"wilkelab/ungeviz\")\n\n\n\n\nCode\nlibrary(ungeviz)\n\n\nHOPs\n\n\nCode\nggplot(data = Jakarta, \n       (aes(x = factor(City), \n            y = Death))) +\n  geom_point(position = position_jitter(\n    height = 0.3, \n    width = 0.05), \n    size = 0.4, \n    color = \"#0072B2\", \n    alpha = 1/2) +\n  geom_hpline(data = sampler(25, \n                             group = City), \n              height = 0.6, \n              color = \"#D55E00\") +\n  theme_bw() + \n  transition_states(.draw, 1, 3)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#visualizing-regression-parameters",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#visualizing-regression-parameters",
    "title": "Hands-on_Ex04",
    "section": "Visualizing Regression Parameters",
    "text": "Visualizing Regression Parameters\n\n\nCode\nggcoefstats(model1,   #visualize the parameters of regression model\n            output = \"plot\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#load-r-packages",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#load-r-packages",
    "title": "Hands-on_Ex04",
    "section": "Load R packages",
    "text": "Load R packages\n\n\nCode\npacman::p_load(tidyverse, FunnelPlotR, plotly, knitr)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#import-data",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#import-data",
    "title": "Hands-on_Ex04",
    "section": "Import Data",
    "text": "Import Data\n\n\nCode\ncovid19 &lt;- read_csv(\"data/COVID-19_DKI_Jakarta.csv\") %&gt;%\n  mutate_if(is.character, as.factor)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#funnelplotr-methods",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#funnelplotr-methods",
    "title": "Hands-on_Ex04",
    "section": "5.1 FunnelPlotR Methods",
    "text": "5.1 FunnelPlotR Methods\nFunnelPlotR package uses ggplot to generate funnel plots. It requires a numerator (events of interest), denominator (population to be considered) and group. The key arguments selected for customisation are:\n\nlimit: plot limits (95 or 99).\nlabel_outliers: to label outliers (true or false).\nPoisson_limits: to add Poisson limits to the plot.\nOD_adjust: to add overdispersed limits to the plot.\nxrange and yrange: to specify the range to display for axes, acts like a zoom function.\nOther aesthetic components such as graph title, axis labels etc.\n\n\n\nCode\nfunnel_plot(\n  .data = covid19,\n  numerator = Positive,\n  denominator = Death,\n  group = `Sub-district`\n)\n\n\n\n\n\n\n\n\n\nA funnel plot object with 267 points of which 0 are outliers. \nPlot is adjusted for overdispersion. \n\n\nThings to learn from the code chunk above.\n\ngroup in this function is different from the scatterplot. Here, it defines the level of the points to be plotted i.e. Sub-district, District or City. If Cityc is chosen, there are only six data points.\nBy default, data_typeargument is “SR”.\nlimit: Plot limits, accepted values are: 95 or 99, corresponding to 95% or 99.8% quantiles of the distribution.\n\n\nMakeover 1Makeover 2\n\n\n+ data_type argument is used to change from default “SR” to “PR” (i.e. proportions). + xrange and yrange are used to set the range of x-axis and y-axis\n\n\nCode\nfunnel_plot(\n  .data = covid19,\n  numerator = Death,\n  denominator = Positive,\n  group = `Sub-district`,\n  data_type = \"PR\",     #&lt;&lt;\n  xrange = c(0, 6500),  #&lt;&lt;\n  yrange = c(0, 0.05)   #&lt;&lt;\n)\n\n\n\n\n\n\n\n\n\nA funnel plot object with 267 points of which 7 are outliers. \nPlot is adjusted for overdispersion. \n\n\n\n\n\nlabel = NA argument is to removed the default label outliers feature.\ntitle argument is used to add plot title.\nx_label and y_label arguments are used to add/edit x-axis and y-axis titles.\n\n\n\nCode\nfunnel_plot(\n  .data = covid19,\n  numerator = Death,\n  denominator = Positive,\n  group = `Sub-district`,\n  data_type = \"PR\",   \n  xrange = c(0, 6500),  \n  yrange = c(0, 0.05),\n  label = NA,\n  title = \"Cumulative COVID-19 Fatality Rate by Cumulative Total Number of COVID-19 Positive Cases\", #&lt;&lt;           \n  x_label = \"Cumulative COVID-19 Positive Cases\", #&lt;&lt;\n  y_label = \"Cumulative Fatality Rate\"  #&lt;&lt;\n)\n\n\n\n\n\n\n\n\n\nA funnel plot object with 267 points of which 7 are outliers. \nPlot is adjusted for overdispersion."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#fair-visual-comparison-ggplot-2-methods",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#fair-visual-comparison-ggplot-2-methods",
    "title": "Hands-on_Ex04",
    "section": "5.2 Fair Visual Comparison: ggplot 2 methods",
    "text": "5.2 Fair Visual Comparison: ggplot 2 methods\n\n\nCode\n#basic fields\ndf &lt;- covid19 %&gt;%\n  mutate(rate = Death / Positive) %&gt;%\n  mutate(rate.se = sqrt((rate*(1-rate)) / (Positive))) %&gt;%\n  filter(rate &gt; 0)\n#fit.mean\nfit.mean &lt;- weighted.mean(df$rate, 1/df$rate.se^2)\n\n#Calculate upper and lower limits for 95% and 99.9% Confidence Interval\nnumber.seq &lt;- seq(1, max(df$Positive), 1)\nnumber.ll95 &lt;- fit.mean - 1.96 * sqrt((fit.mean*(1-fit.mean)) / (number.seq)) \nnumber.ul95 &lt;- fit.mean + 1.96 * sqrt((fit.mean*(1-fit.mean)) / (number.seq)) \nnumber.ll999 &lt;- fit.mean - 3.29 * sqrt((fit.mean*(1-fit.mean)) / (number.seq)) \nnumber.ul999 &lt;- fit.mean + 3.29 * sqrt((fit.mean*(1-fit.mean)) / (number.seq)) \ndfCI &lt;- data.frame(number.ll95, number.ul95, number.ll999, \n                   number.ul999, number.seq, fit.mean)\n\n\n\nStatic plotInteractive plot: plotly + ggplot2\n\n\n\n\nCode\np &lt;- ggplot(df, aes(x = Positive, y = rate)) +\n  geom_point(aes(label=`Sub-district`), \n             alpha=0.4) +\n  geom_line(data = dfCI, \n            aes(x = number.seq, \n                y = number.ll95), \n            size = 0.4, \n            colour = \"grey40\", \n            linetype = \"dashed\") +\n  geom_line(data = dfCI, \n            aes(x = number.seq, \n                y = number.ul95), \n            size = 0.4, \n            colour = \"grey40\", \n            linetype = \"dashed\") +\n  geom_line(data = dfCI, \n            aes(x = number.seq, \n                y = number.ll999), \n            size = 0.4, \n            colour = \"grey40\") +\n  geom_line(data = dfCI, \n            aes(x = number.seq, \n                y = number.ul999), \n            size = 0.4, \n            colour = \"grey40\") +\n  geom_hline(data = dfCI, \n             aes(yintercept = fit.mean), \n             size = 0.4, \n             colour = \"grey40\") +\n  coord_cartesian(ylim=c(0,0.05)) +\n  annotate(\"text\", x = 1, y = -0.13, label = \"95%\", size = 3, colour = \"grey40\") + \n  annotate(\"text\", x = 4.5, y = -0.18, label = \"99%\", size = 3, colour = \"grey40\") + \n  ggtitle(\"Cumulative Fatality Rate by Cumulative Number of COVID-19 Cases\") +\n  xlab(\"Cumulative Number of COVID-19 Cases\") + \n  ylab(\"Cumulative Fatality Rate\") +\n  theme_light() +\n  theme(plot.title = element_text(size=12),\n        legend.position = c(0.91,0.85), \n        legend.title = element_text(size=7),\n        legend.text = element_text(size=7),\n        legend.background = element_rect(colour = \"grey60\", linetype = \"dotted\"),\n        legend.key.height = unit(0.3, \"cm\"))\np\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nfp_ggplotly &lt;- ggplotly(p,\n  tooltip = c(\"label\", \n              \"x\", \n              \"y\"))\nfp_ggplotly"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html",
    "title": "Hands-on_Ex06",
    "section": "",
    "text": "Overview:\nTo plot a calendar heatmap by using ggplot2 package.\nInstall and Load Package:\n\n\nCode\npacman::p_load(scales, viridis, lubridate, ggthemes,\n               gridExtra, readxl, knitr, data.table,\n               CGPfunctions, ggHoriPlot, tidyverse)\n\n\nImport Data:\n\n\nCode\nattacks &lt;- read_csv(\"data/eventlog.csv\")\n\n\nExamine data structure:\n\n\nCode\nkable(head(attacks))\n\n\n\n\n\ntimestamp\nsource_country\ntz\n\n\n\n\n2015-03-12 15:59:16\nCN\nAsia/Shanghai\n\n\n2015-03-12 16:00:48\nFR\nEurope/Paris\n\n\n2015-03-12 16:02:26\nCN\nAsia/Shanghai\n\n\n2015-03-12 16:02:38\nUS\nAmerica/Chicago\n\n\n2015-03-12 16:03:22\nCN\nAsia/Shanghai\n\n\n2015-03-12 16:03:45\nCN\nAsia/Shanghai\n\n\n\n\n\nData Prep:\nStep 1:\n2 new fields need to be derived. wkday and hour was created.\n\n\nCode\nmake_hr_wkday &lt;- function(ts, sc, tz) {\n  real_times &lt;- ymd_hms(ts, \n                        tz = tz[1], \n                        quiet = TRUE)\n  dt &lt;- data.table(source_country = sc,\n                   wkday = weekdays(real_times),\n                   hour = hour(real_times))\n  return(dt)\n}\n\n#ymd_hms() and hour() are from lubridate package, and\n#weekdays() is a base R function.\n\n\nStep 2:\n\n\nCode\nwkday_levels &lt;- c('Saturday', 'Friday', \n                  'Thursday', 'Wednesday', \n                  'Tuesday', 'Monday', \n                  'Sunday')\n\nattacks &lt;- attacks %&gt;%\n  group_by(tz) %&gt;%\n  do(make_hr_wkday(.$timestamp, \n                   .$source_country, \n                   .$tz)) %&gt;% \n  ungroup() %&gt;% \n  mutate(wkday = factor(\n    wkday, levels = wkday_levels),\n    hour  = factor(\n      hour, levels = 0:23))\n\n#Beside extracting the necessary data into attacks data frame, mutate() of dplyr package is used to convert wkday and hour fields into factor so they’ll be ordered when plotting\n\n\n\n\nCode\nkable(head(attacks))\n\n\n\n\n\ntz\nsource_country\nwkday\nhour\n\n\n\n\nAfrica/Cairo\nBG\nSaturday\n20\n\n\nAfrica/Cairo\nTW\nSunday\n6\n\n\nAfrica/Cairo\nTW\nSunday\n8\n\n\nAfrica/Cairo\nCN\nSunday\n11\n\n\nAfrica/Cairo\nUS\nSunday\n15\n\n\nAfrica/Cairo\nCA\nMonday\n11\n\n\n\n\n\nBuild Heatmap:\n\n\nCode\ngrouped &lt;- attacks %&gt;% \n  count(wkday, hour) %&gt;% \n  ungroup() %&gt;%\n  na.omit()\n\nggplot(grouped, \n       aes(hour, \n           wkday, \n           fill = n)) + \ngeom_tile(color = \"white\", \n          size = 0.1) + \ntheme_tufte(base_family = \"Helvetica\") + \ncoord_equal() +\nscale_fill_gradient(name = \"# of attacks\",\n                    low = \"sky blue\", \n                    high = \"dark blue\") +\nlabs(x = NULL, \n     y = NULL, \n     title = \"Attacks by weekday and time of day\") +\ntheme(axis.ticks = element_blank(),\n      plot.title = element_text(hjust = 0.5),\n      legend.title = element_text(size = 8),\n      legend.text = element_text(size = 6) )\n\n\n\n\n\n\n\n\n\nThings to note:\n\na tibble data table called grouped is derived by aggregating the attack by wkday and hour fields.\na new field called n is derived by using group_by() and count() functions.\nna.omit() is used to exclude missing value.\ngeom_tile() is used to plot tiles (grids) at each x and y position. color and size arguments are used to specify the border color and line size of the tiles.\ntheme_tufte() of ggthemes package is used to remove unnecessary chart junk. To learn which visual components of default ggplot2 have been excluded, you are encouraged to comment out this line to examine the default plot.\ncoord_equal() is used to ensure the plot will have an aspect ratio of 1:1.\nscale_fill_gradient() function is used to creates a two colour gradient (low-high).\n\nBuild multiple heatmaps\nExample: Top 4 countries with highest attacks\nStep 1: derive attack by country object\n\ncount the number of attacks by country,\ncalculate the percent of attackes by country, and\nsave the results in a tibble data frame.\n\n\n\nCode\nattacks_by_country &lt;- count(\n  attacks, source_country) %&gt;%\n  mutate(percent = percent(n/sum(n))) %&gt;%\n  arrange(desc(n))\n\n\nStep 2: Preparing the tidy data frame\n\n\nCode\n#Extract attack records\ntop4 &lt;- attacks_by_country$source_country[1:4]\ntop4_attacks &lt;- attacks %&gt;%\n  filter(source_country %in% top4) %&gt;%\n  count(source_country, wkday, hour) %&gt;%\n  ungroup() %&gt;%\n  mutate(source_country = factor(\n    source_country, levels = top4)) %&gt;%\n  na.omit()\n\n\nStep 3: Plot the maps\n\n\nCode\nggplot(top4_attacks, \n       aes(hour, \n           wkday, \n           fill = n)) + \n  geom_tile(color = \"white\", \n          size = 0.1) + \n  theme_tufte(base_family = \"Helvetica\") + \n  coord_equal() +\n  scale_fill_gradient(name = \"# of attacks\",\n                    low = \"sky blue\", \n                    high = \"dark blue\") +\n  facet_wrap(~source_country, ncol = 2) +\n  labs(x = NULL, y = NULL, \n     title = \"Attacks on top 4 countries by weekday and time of day\") +\n  theme(axis.ticks = element_blank(),\n        axis.text.x = element_text(size = 7),\n        plot.title = element_text(hjust = 0.5),\n        legend.title = element_text(size = 8),\n        legend.text = element_text(size = 6) )\n\n\n\n\n\n\n\n\n\nCycle Plot\nStep 1: Data Import\n\n\nCode\nair &lt;- read_excel(\"data/arrivals_by_air.xlsx\")\n\n\nStep 2: Derive month and year fields\n\n\nCode\nair$month &lt;- factor(month(air$`Month-Year`), \n                    levels=1:12, \n                    labels=month.abb, \n                    ordered=TRUE) \nair$year &lt;- year(ymd(air$`Month-Year`))\n\n\nStep 3: Extract Target Country\n\n\nCode\nVietnam &lt;- air %&gt;% \n  select(`Vietnam`, \n         month, \n         year) %&gt;%\n  filter(year &gt;= 2010)\n\n\nStep 4: Computing year average arrivals by month\n\n\nCode\nhline.data &lt;- Vietnam %&gt;% \n  group_by(month) %&gt;%\n  summarise(avgvalue = mean(`Vietnam`))\n\n\nStep 5: Plot cycle plot\n\n\nCode\nlibrary(ggrepel)\nggplot() + \n  geom_line(data=Vietnam,\n            aes(x=year, \n                y=`Vietnam`, \n                group=month), \n            colour=\"black\") +\n  geom_hline(aes(yintercept=avgvalue), \n             data=hline.data, \n             linetype=6, \n             colour=\"red\", \n             size=0.5) + \n  geom_text_repel() +\n  facet_grid(~month) +\n  labs(axis.text.x = element_blank(),\n       title = \"Visitor arrivals from Vietnam by air, Jan 2010-Dec 2019\") +\n  xlab(\"\") +\n  ylab(\"No. of Visitors\") +\n  theme_tufte(base_family = \"Helvetica\") +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\n\n\n\n\n\n\n\n\nSlopegraph\nStep 1: Data Import\n\n\nCode\nrice &lt;- read_csv(\"data/rice.csv\")\n\n\nStep 2: Plot slopegraph\n\nFor effective data visualisation design, factor() is used convert the value type of Year field from numeric to factor.\n\n\n\nCode\nrice %&gt;% \n  mutate(Year = factor(Year)) %&gt;%\n  filter(Year %in% c(1961, 1980)) %&gt;%\n  newggslopegraph(Year, Yield, Country,\n                Title = \"Rice Yield of Top 11 Asian Counties\",\n                SubTitle = \"1961-1980\")"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex03/In-class_Ex03.html",
    "href": "In-class_Ex/In-class_Ex03/In-class_Ex03.html",
    "title": "In-class_Ex03",
    "section": "",
    "text": "What was mentioned during class:\n\nMake sure that your Netlify website is totally sync with the Rstudio: Render website from the “Build” Tab and then commit and push to the github.\nNumerical data and categorical data: Make sure to recode in R studio if you want to change into categorical data from numerical data\nHow to critique and visualize the right data (tips to comment on visualization):\n\nChart Junk VI: the ages should be in a sequential order, so that it is easily interpreted\nAvoid distorting the graph especially when there is a grid reference for aesthetic purposes\nAdd in text labels to explain plot/graph if needed\nClarity and aesthetics: use mapping data visualization on a cartesian coordinate system and put on the quadrant plot to assess and critique\nQuadrant 4: Confusing yet beautiful - add in at least 3 good points and areas to improve further\nQuadrant 1: Clear and Beautiful - add in 3 points each as well\nAdd in areas to improve - not just changing the graph as a whole unless it is very bad\n\n\n\n\nCritiques and comments to improve the graphs of my peers\n\nDistortion of axis - try to avoid that, make it similar as much as possible so that it can be truthful, clarity issue as well when you cannot pinpoint which is student 30, avoid using light colours and the labelling should not be hidden, plot it above the points\n\n\n\n\nDistortion of axis of graph\n\n\n\nHidden data as the plot is on top of the data points\n\n\n\n\nBeautiful but no clarity\n\n\n\nTitle is being cut off\n\n\n\nUnify the theme - all same theme and consistent as well as font\n\n\n\n\n\n\n\nStacked bar chart\n\n\nin general, the example is good\nLegend is redundant: can just put a label to suggest gender\nForgot to fix the limit of x-axis for the values: the range of y and x axis is different: to not misinterpret data\n\nPie Chart\n\nBad example below\n\n\nBetter Example below:\n\nThere is some overlapping in terms of the labelling in the piechart\nUse of colour: Try to avoid using hard colours, use a less opaque colour or reduce the opaqueness\n\n\n\n\nRaincloud Plot\n\n\n\n\n\n\nMore appropriate design\n\n\n\nRoom for improvements: Raindrop is not falling in place\n\n\n\nIn class Exercise (Tableau)\n\nAvoid over-generalization: in the aggregation of data\nVisualize - Add in Quadrant lines (manually):\n\nConvert data into percentile: Click on data point (Sales), Quick Table Calculation &gt; Percentile, Compute using &gt; State\nAdd Reference line: Click on the axis, and click on “add reference line”, Use constant and use 0.5 (for flexibility) or use median\nAdd in Colours to the data points:\nChange the size:\n\nFilter: drag in order date into the filter panel - click on Year, click on 2019 , apply and click okay, show filter, change to radio button on the right hand corner of the Year filter\nAuto-update the year when changing filter: Go to the title of the plot, click on edit title and add in insert &lt;data order date&gt; after “,”+” “."
  },
  {
    "objectID": "In-class_Ex/In-class_Ex05/In-class_Ex05.html",
    "href": "In-class_Ex/In-class_Ex05/In-class_Ex05.html",
    "title": "In-class_Ex05",
    "section": "",
    "text": "In this code chunk below, p_load() of pacman package is used to load the R packages into R environment.\n\n\nCode\npacman::p_load(tidyverse,jsonlite, SmartEDA, tidygraph, ggraph)\n\n\nIn the code chunk below, fromJSON() of jsonlite package is used to import MC1_graph.json file into R and save the output object.\n\n\nCode\nkg &lt;- fromJSON(\"C:\\\\shermainn\\\\ISSS608new\\\\In-class_Ex\\\\In-class_Ex05\\\\data\\\\MC1_graph.json\")\n\n\nInspect Structure\n\n\nCode\nstr(kg, max.level = 1)\n\n\nList of 5\n $ directed  : logi TRUE\n $ multigraph: logi TRUE\n $ graph     :List of 2\n $ nodes     :'data.frame': 17412 obs. of  10 variables:\n $ links     :'data.frame': 37857 obs. of  4 variables:\n\n\nExtract and Inspect\nTo do some data cleaning, we separate out into nodes_tb1 and edges_tb1 from the json file.\n\n\nCode\nnodes_tb1 &lt;- as_tibble(kg$nodes) \nedges_tb1 &lt;- as_tibble(kg$links)\n\n\nInitial EDA\n\n\nCode\nggplot(data = edges_tb1,         \n       aes(y = `Edge Type`)) +    \n  geom_bar()\n\n\n\n\n\n\n\n\n\n\n\nCode\nggplot(data = nodes_tb1,         \n       aes(y = `Node Type`)) +    \n  geom_bar()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nid_map &lt;- tibble(id = nodes_tb1$id,                  \n                 index = seq_len(nrow(nodes_tb1)))\n\n\nThis ensures each id from your node list is mapped to the correct row number.\n\n\n\n\n\nCode\nedges_tb1 &lt;- edges_tb1 %&gt;%   \n  left_join(id_map, by = c(\"source\" = \"id\")) %&gt;%   \n  rename(from = index) %&gt;%   \n  left_join(id_map, by = c(\"target\" = \"id\")) %&gt;%   \n  rename(to = index)\n\n\n\n\n\n\n\nCode\nedges_tb1 &lt;- edges_tb1 %&gt;%   \n  filter(!is.na(from), !is.na(to))\n\n\n\n\n\nLastly, tbl_graph() is used to create tidygraph’s graph object by using the code chunk below.\n\n\nCode\ngraph &lt;- tbl_graph(nodes = nodes_tb1,                    \n                   edges = edges_tb1,                     \n                   directed = kg$directed)\n\n\nVisualize the knowledge graph\n\n\nCode\nset.seed(1234) #ensures to get back the same graph\n\n\nVisualize the whole graph\n\n\nCode\nggraph(graph, layout = \"fr\") +   \n  geom_edge_link(alpha = 0.3,                  \n                 colour = \"gray\") +   \n  geom_node_point(aes(colour = `Node Type`),                   \n                  size = 4) +   \n  geom_node_text(aes(label = name),                  \n                 repel = TRUE,                  \n                 size = 2.5) +   \n  theme_void()\n\n\n\n\n\n\n\nCode\ngraph_memberof &lt;- graph %&gt;%\n  activate(edges) %&gt;%\n  filter(`Edge Type` == \"MemberOf\")\n\n\n\n\n\n\n\nCode\nused_node_indices &lt;- graph_memberof %&gt;%\n  activate(edges) %&gt;%\n  as_tibble() %&gt;%\n  select(from, to) %&gt;%\n  unlist() %&gt;%\n  unique()\n\n\n\n\n\n\n\nCode\ngraph_memberof &lt;- graph_memberof %&gt;%\n  activate(nodes) %&gt;%\n  mutate(row_id = row_number()) %&gt;%\n  filter(row_id %in% used_node_indices) %&gt;%\n  select(-row_id) #optional clean up\n\n\nPlot the sub-graph\n\n\nCode\nggraph(graph_memberof, \n       layout = \"fr\") +\n  geom_edge_link(alpha = 0.5,\n                 colour = \"gray\") +\n  geom_node_point(aes(colour = `Node Type`),\n                  size = 1) +\n  geom_node_text(aes(label = name),\n                 repel = TRUE, \n                 size = 2.5) +\n  theme_void()\n\n\n\n\n\n\n\n\n\nthe graph shows that it is very silo"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex05/In-class_Ex05.html#create-knowledge-graph",
    "href": "In-class_Ex/In-class_Ex05/In-class_Ex05.html#create-knowledge-graph",
    "title": "In-class_Ex05",
    "section": "",
    "text": "Code\nid_map &lt;- tibble(id = nodes_tb1$id,                  \n                 index = seq_len(nrow(nodes_tb1)))\n\n\nThis ensures each id from your node list is mapped to the correct row number.\n\n\n\n\n\nCode\nedges_tb1 &lt;- edges_tb1 %&gt;%   \n  left_join(id_map, by = c(\"source\" = \"id\")) %&gt;%   \n  rename(from = index) %&gt;%   \n  left_join(id_map, by = c(\"target\" = \"id\")) %&gt;%   \n  rename(to = index)\n\n\n\n\n\n\n\nCode\nedges_tb1 &lt;- edges_tb1 %&gt;%   \n  filter(!is.na(from), !is.na(to))\n\n\n\n\n\nLastly, tbl_graph() is used to create tidygraph’s graph object by using the code chunk below.\n\n\nCode\ngraph &lt;- tbl_graph(nodes = nodes_tb1,                    \n                   edges = edges_tb1,                     \n                   directed = kg$directed)\n\n\nVisualize the knowledge graph\n\n\nCode\nset.seed(1234) #ensures to get back the same graph\n\n\nVisualize the whole graph\n\n\nCode\nggraph(graph, layout = \"fr\") +   \n  geom_edge_link(alpha = 0.3,                  \n                 colour = \"gray\") +   \n  geom_node_point(aes(colour = `Node Type`),                   \n                  size = 4) +   \n  geom_node_text(aes(label = name),                  \n                 repel = TRUE,                  \n                 size = 2.5) +   \n  theme_void()\n\n\n\n\n\n\n\nCode\ngraph_memberof &lt;- graph %&gt;%\n  activate(edges) %&gt;%\n  filter(`Edge Type` == \"MemberOf\")\n\n\n\n\n\n\n\nCode\nused_node_indices &lt;- graph_memberof %&gt;%\n  activate(edges) %&gt;%\n  as_tibble() %&gt;%\n  select(from, to) %&gt;%\n  unlist() %&gt;%\n  unique()\n\n\n\n\n\n\n\nCode\ngraph_memberof &lt;- graph_memberof %&gt;%\n  activate(nodes) %&gt;%\n  mutate(row_id = row_number()) %&gt;%\n  filter(row_id %in% used_node_indices) %&gt;%\n  select(-row_id) #optional clean up\n\n\nPlot the sub-graph\n\n\nCode\nggraph(graph_memberof, \n       layout = \"fr\") +\n  geom_edge_link(alpha = 0.5,\n                 colour = \"gray\") +\n  geom_node_point(aes(colour = `Node Type`),\n                  size = 1) +\n  geom_node_text(aes(label = name),\n                 repel = TRUE, \n                 size = 2.5) +\n  theme_void()\n\n\n\n\n\n\n\n\n\nthe graph shows that it is very silo"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "ISSS608new",
    "section": "",
    "text": "Welcome to ISSS608 Visual Analytics and Applications. In this website, you will find my coursework prepared for this course."
  },
  {
    "objectID": "index.html#latest-hands-on-exercise",
    "href": "index.html#latest-hands-on-exercise",
    "title": "ISSS608new",
    "section": "🔥 Latest Hands-on Exercise",
    "text": "🔥 Latest Hands-on Exercise\n\n\n\n\n\n\nHandsOnEx6\n\n\nHands-on Exercise 6\n\n\n\nShermainn"
  },
  {
    "objectID": "index.html#latest-take-home-exercise",
    "href": "index.html#latest-take-home-exercise",
    "title": "ISSS608new",
    "section": "🔥 Latest Take-home Exercise",
    "text": "🔥 Latest Take-home Exercise\n\n\n\n\n\n\nTakehomeEx02\n\n\nTake-home Exercise 2\n\n\n\nShermainn"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01b.html",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01b.html",
    "title": "Take-home_Ex01b",
    "section": "",
    "text": "This is on the Phase ll of Take-home exercise 1 where I will be evaluating and critiquing on one of my peer’s, Celin, Take-home exercise 1 from her Netlify shown here."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01b.html#pie-chart-by-region",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01b.html#pie-chart-by-region",
    "title": "Take-home_Ex01b",
    "section": "Pie Chart by Region",
    "text": "Pie Chart by Region\nFor the pie chart shown below, there are some good design principles such as:\n\nLabeling of slices: The chart labels shown on the legend directly corresponds with the category and percentage shown.\nFlat 2D design: This avoids the distortion of the pie chart that could happen when using a 3D plot.\nSorted Slices in descending order: As the slices are arranged sequentially from biggest to smallest in a clockwise direction, this helps me to quickly grasp the distribution of values.\n\nAreas to improve on:\n\nLimit the chart to one variable: The pie chart should only show one factor instead of comparing two factors as it is quite difficult to interpret visually. It would be clearer if it is focused on one factor - such as gender and use colour variations to represent the regions within that category.\nUnclear percentage meaning: I am unable to distinguish what the total percentage actually represent - whether they are referirng to the distribution by region within the total population or by gender when I look at the chart visually. This ambiguity makes the chart pretty confusing and would need further clarification\nImprove colour transparency: This makes the chart harder to distinguish between sections. Hence, reduce the opacity or use more contrasting colours to enhance the readability"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01b.html#cleaned-data",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01b.html#cleaned-data",
    "title": "Take-home_Ex01b",
    "section": "Cleaned Data",
    "text": "Cleaned Data\n\n\nCode\npacman::p_load(tidyverse, ggrepel, \n               ggthemes,  hrbrthemes,\n               patchwork, dplyr) \n\nlibrary(readxl)\n\nresident_data &lt;- read_excel(\"C:\\\\shermainn\\\\ISSS608new\\\\Take-home_Ex\\\\Take-home_Ex01\\\\data\\\\respopagesex2024e.xlsx\")\n\nany(duplicated(resident_data))\n\n\n[1] FALSE\n\n\nCode\ncolSums(is.na(resident_data))\n\n\nPlanning Area       Subzone           Age           Sex          2024 \n            1             6             6             6             6 \n\n\nCode\nresident_data_clean &lt;- resident_data %&gt;%\n  rename(\n    Planning_Area = `Planning Area`,\n    Subzone = Subzone,\n    Population = `2024`\n  ) %&gt;%\n  # Convert Age to \"90+\" if it's \"90_and_Over\"\n  mutate(\n    Age = ifelse(Age == \"90_and_Over\", \"90\", Age),\n    Population = as.numeric(Population),\n    Age = factor(Age, levels = as.character(0:90)),\n    Age_numeric = as.numeric(as.character(Age))  \n  )\n\n# 1. Step 1\nregion_map &lt;- list(\n  North = c(\n    \"Central Water Catchment\", \"Lim Chu Kang\", \"Mandai\",\n    \"Sembawang\", \"Simpang\", \"Sungei Kadut\", \"Woodlands\", \"Yishun\"\n  ),\n  `North-East` = c(\n    \"Ang Mo Kio\", \"Hougang\", \"Punggol\", \"Sengkang\", \n    \"Serangoon\", \"Seletar\"\n  ),\n  East = c(\n    \"Bedok\", \"Changi\", \"Changi Bay\", \n    \"Pasir Ris\", \"Paya Lebar\", \"Tampines\"\n  ),\n  West = c(\n    \"Boon Lay\", \"Bukit Batok\", \"Bukit Panjang\", \"Choa Chu Kang\",\n    \"Clementi\", \"Jurong East\", \"Jurong West\", \"Pioneer\", \n    \"Tengah\", \"Tuas\", \"Western Water Catchment\"\n  ),\n  Central = c(\n    \"Bishan\", \"Bukit Merah\", \"Bukit Timah\", \"Central Area\",\n    \"Downtown Core\", \"Marina East\", \"Marina South\", \"Museum\",\n    \"Newton\", \"Novena\", \"Orchard\", \"Outram\", \"River Valley\",\n    \"Rochor\", \"Singapore River\", \"Straits View\", \"Tanglin\"\n  )\n)\n\n# Step 2\nresident_regioned &lt;- resident_data_clean %&gt;%\n  mutate(\n    Region = case_when(\n      Planning_Area %in% region_map$North        ~ \"North\",\n      Planning_Area %in% region_map$`North-East` ~ \"North-East\",\n      Planning_Area %in% region_map$East         ~ \"East\",\n      Planning_Area %in% region_map$West         ~ \"West\",\n      Planning_Area %in% region_map$Central      ~ \"Central\",\n      TRUE                                       ~ NA_character_\n    )\n  ) %&gt;%\n  filter(!is.na(Region))\n\nhead(resident_regioned)\n\n\n# A tibble: 6 × 7\n  Planning_Area Subzone Age   Sex     Population Age_numeric Region    \n  &lt;chr&gt;         &lt;chr&gt;   &lt;fct&gt; &lt;chr&gt;        &lt;dbl&gt;       &lt;dbl&gt; &lt;chr&gt;     \n1 Ang Mo Kio    Total   &lt;NA&gt;  Total       159340          NA North-East\n2 Ang Mo Kio    Total   &lt;NA&gt;  Males        75600          NA North-East\n3 Ang Mo Kio    Total   &lt;NA&gt;  Females      83740          NA North-East\n4 Ang Mo Kio    Total   0     Total          810           0 North-East\n5 Ang Mo Kio    Total   0     Males          410           0 North-East\n6 Ang Mo Kio    Total   0     Females        410           0 North-East"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01b.html#modified-pie-chart",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01b.html#modified-pie-chart",
    "title": "Take-home_Ex01b",
    "section": "Modified Pie Chart",
    "text": "Modified Pie Chart\n\n\nCode\npie_all_regions &lt;- resident_regioned %&gt;%\n  group_by(Region, Sex) %&gt;%\n  summarise(Population = sum(Population, na.rm = TRUE), .groups = \"drop\") %&gt;%\n  filter(!is.na(Population) & Population &gt; 0)\n\nmale_data &lt;- pie_all_regions %&gt;%\n  filter(Sex == \"Males\") %&gt;%\n  mutate(\n    label = paste0(Region, \"\\n\", round(Population / sum(Population) * 100, 1), \"%\")\n  )\n\nfemale_data &lt;- pie_all_regions %&gt;%\n  filter(Sex == \"Females\") %&gt;%\n  mutate(\n    label = paste0(Region, \"\\n\", round(Population / sum(Population) * 100, 1), \"%\")\n  )\n\nregion_colors &lt;- c(\n  \"Central\"     = \"#f4cccc\",\n  \"East\"        = \"#d9ead3\",\n  \"North\"       = \"#fce5cd\",\n  \"North-East\"  = \"#d9d2e9\",\n  \"West\"        = \"#cfe2f3\"\n)\n\n# Plot: Two pie charts with direct labels\nmale_pie &lt;- ggplot(male_data, aes(x = \"\", y = Population, fill = Region)) +\n  geom_col(width = 1, color = \"white\") +\n  geom_text(aes(label = label), position = position_stack(vjust = 0.5), size = 3) +\n  coord_polar(theta = \"y\") +\n  theme_void(base_size = 11) +\n  labs(title = \"Population by Region (Males)\") +\n  scale_fill_manual(values = region_colors) +\n  theme(legend.position = \"none\")\n\nfemale_pie &lt;- ggplot(female_data, aes(x = \"\", y = Population, fill = Region)) +\n  geom_col(width = 1, color = \"white\") +\n  geom_text(aes(label = label), position = position_stack(vjust = 0.5), size = 3) +\n  coord_polar(theta = \"y\") +\n  theme_void(base_size = 11) +\n  labs(title = \"Population by Region (Females)\") +\n  scale_fill_manual(values = region_colors) +\n  theme(legend.position = \"none\")\n\nmale_pie + female_pie"
  }
]