---
title: "Hands-on Exercise 2"
author: "Shermainn"
---

# 1. Overview

In this exercise, I will be learning on how to:

1.  Control the placement of annotation on a graph using functions provided in `ggrepel` package
2.  Create professional publication quality figures using functions provided in `ggthemes` and `hrbrthemes` packages
3.  Plot composite figures by combining ggplot2 graphs using `patchwork` package

# 2. Getting Started

## 2.1. Install and Load required libraries

Code chunk below is used to check if all 4 R packages (`ggrepel`, `ggthemes`, `hrbrthemes` & patchwork) are installed and loaded onto the environment.

```{r}
pacman::p_load(ggrepel, patchwork, 
               ggthemes, hrbrthemes,
               tidyverse) 
```

## 2.2. Import data

```{r}
exam_data <- read_csv("data/Exam_data.csv")
```

# 3. ggrepel

To prevent overlap of text, replace [geom_text()]{.underline} with **geom_text_repel()** and [geom_label()]{.underline} with **geom_label_repel()**.

| ggrepel | Original Text | Replace with       |
|---------|---------------|--------------------|
|         | geom_text()   | geom_text_repel()  |
|         | geom_label()  | geom_label_repel() |

::: panel-tabset
### Default

```{r}
ggplot(data=exam_data, 
       aes(x= MATHS, 
           y=ENGLISH)) +
  geom_point() +
  geom_smooth(method=lm, 
              size=0.5) +  
  geom_label(aes(label = ID), 
             hjust = .5, 
             vjust = -.5) +
  coord_cartesian(xlim=c(0,100),
                  ylim=c(0,100)) +
  ggtitle("English scores versus Maths scores for Primary 3")
```

### With ggrepel

```{r}
ggplot(data=exam_data, 
       aes(x= MATHS, 
           y=ENGLISH)) +
  geom_point() +
  geom_smooth(method=lm, 
              size=0.5) +  
  geom_label_repel(aes(label = ID), 
                   fontface = "bold") +
  coord_cartesian(xlim=c(0,100),
                  ylim=c(0,100)) +
  ggtitle("English scores versus Maths scores for Primary 3")

```

### With ggrepel with overlaps

```{r}
ggplot(data = exam_data, 
       aes(x = MATHS, 
           y = ENGLISH)) +
  geom_point() +
  geom_smooth(method = lm, 
              linewidth = 0.5) +  
  geom_label_repel(aes(label = ID), 
                   fontface = "bold",
                   max.overlaps = nrow(exam_data)*0.2) +
  coord_cartesian(xlim = c(0,100),
                  ylim = c(0,100)) +
  ggtitle("English scores versus Maths scores for Primary 3")
```
:::

# 4. ggthemes

ggthemes provide ggplot2 themes by replicating the look of plots by Edward Tufte and Stephen Few.

+-----------------------------------------------------------------------------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Category                                                                                                              | Description                                                                                                                                                                                                                     |
+=======================================================================================================================+=================================================================================================================================================================================================================================+
| **ggplot2 Built-in Themes**                                                                                           | 8 built-in themes: `theme_gray()`, `theme_bw()`, `theme_classic()`, `theme_dark()`, `theme_light()`, `theme_linedraw()`, `theme_minimal()`, and `theme_void()`                                                                  |
+-----------------------------------------------------------------------------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| **ggthemes (Extension)**                                                                                              | Additional themes from the `ggthemes` package: `theme_wsj()`, `theme_tufte()`, `theme_stata()`, `theme_solid()`, `theme_fivethirtyeight()`, `theme_few()`, `theme_excel()`, `theme_economist()`, and `theme_seq_gradient_pal()` |
|                                                                                                                       |                                                                                                                                                                                                                                 |
| More examples found in [ggthemes](https://yutannihilation.github.io/allYourFigureAreBelongToUs/ggthemes/ "ggthemes"). |                                                                                                                                                                                                                                 |
+-----------------------------------------------------------------------------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

::: panel-tabset
### gg2plot (using theme_grey())

```{r}
ggplot(data=exam_data, 
             aes(x = MATHS)) +
  geom_histogram(bins=20, 
                 boundary = 100,
                 color="grey25", 
                 fill="grey90") +
  theme_gray() +
  ggtitle("Distribution of Maths scores") 
```

### ggtheme package (using theme_economist())

```{r}
ggplot(data=exam_data, 
             aes(x = MATHS)) +
  geom_histogram(bins=20, 
                 boundary = 100,
                 color="grey25", 
                 fill="grey90") +
  ggtitle("Distribution of Maths scores") +
  theme_economist()
```
:::

# 5. hrbrthemes

This package provides a base theme that focuses on typographic elements including labels (axis label) and fonts (font size). In addition, the second goal centers around productivity for a production workflow. From the code chunk below:

-   `axis_title_size` - increase font size of axis

-   `base_size` - increase default axis label

-   `grid` - remove x-axis grid-lines

-   ::: panel-tabset
    Default

    ```{r}

    library(ggplot2)
    library(hrbrthemes)

    ggplot(data=exam_data, 
                 aes(x = MATHS)) +
      geom_histogram(bins=20, 
                     boundary = 100,
                     color="grey25", 
                     fill="grey90") +
      ggtitle("Distribution of Maths scores") +
      theme_ipsum()
    ```

    With hrbrthemes

    ```{r}
    ggplot(data=exam_data, 
                 aes(x = MATHS)) +
      geom_histogram(bins=20, 
                     boundary = 100,
                     color="grey25", 
                     fill="grey90") +
      ggtitle("Distribution of Maths scores") +
      theme_ipsum(axis_title_size = 18,
                  base_size = 15,
                  grid = "Y")
    ```
    :::

# 6. patchwork

It is used to combine separate ggplot2 graphs into a single figure. It also provides auto-tagging capabilities. This package has a general syntax that combines:

-   Two-column Layout using the plus sign (+)

-   Parenthesis () to create a subplot group

-   Two-row Layout using the division sign (/)

::: panel-tabset
### Default - creating multiple graphs separately using ggplot2

```{r}
p1 <- ggplot(data=exam_data, 
             aes(x = MATHS)) +
  geom_histogram(bins=20, 
                 boundary = 100,
                 color="grey25", 
                 fill="grey90") + 
  coord_cartesian(xlim=c(0,100)) +
  ggtitle("Distribution of Maths scores")

p1#

p2 <- ggplot(data=exam_data, 
             aes(x = ENGLISH)) +
  geom_histogram(bins=20, 
                 boundary = 100,
                 color="grey25", 
                 fill="grey90") +
  coord_cartesian(xlim=c(0,100)) +
  ggtitle("Distribution of English scores")

p2#

p3 <- ggplot(data=exam_data, 
             aes(x= MATHS, 
                 y=ENGLISH)) +
  geom_point() +
  geom_smooth(method=lm, 
              size=0.5) +  
  coord_cartesian(xlim=c(0,100),
                  ylim=c(0,100)) +
  ggtitle("English scores versus Maths scores for Primary 3")

p3#
```

### Patchwork (using + to combine 2 plots)

```{r}
p1 + p2
```

### Patchwork (using "/","\|","()" to combine 3 plots)

```{r}
(p1 / p2) | p3
```

### Patchwork (with tag)

```{r}
((p1 / p2) | p3) + 
  plot_annotation(tag_levels = 'I')
```

### Patchwork (with insert)

```{r}
p3 + inset_element(p2, 
                   left = 0.02, 
                   bottom = 0.7, 
                   right = 0.5, 
                   top = 1)
```

### Combine patchwork and ggtheme

```{r}
patchwork <- (p1 / p2) | p3
patchwork & theme_economist()
```
:::

# 7. Additional Plots

## 7.1. Notched Boxplot

Using Patchwork, I will using a notched boxplot to find the sample mean of the distribution of English scores and Math scores based on gender (female and male). From using the patchwork package, I am able to see the box-plot diagrams side by side which is much easier to make comparisons and the boxplot diagrams allow me to determine that the mean scores for Math between both genders are similar whereas for English scores, females have a higher mean score as compared to males. I added in ggtheme (`theme_excel()`) so that the diagram is visually more readable.

::: panel-tabset
### Notched Boxplot of English and Math Scores

```{r}
m1 <- ggplot(data=exam_data, 
       aes(y = MATHS, 
           x= GENDER)) +
  geom_boxplot(notch=TRUE)
e1 <- ggplot(data=exam_data, 
       aes(y = ENGLISH, 
           x= GENDER)) +
  geom_boxplot(notch=TRUE) 
e1#
```

### Patchwork of English and Math scores

```{r}
patchwork <- m1 + e1 
patchwork & theme_excel()
```
:::

## 7.2. Violin Plot

To compare the different scores between English, Science and Math among the different students, I used a violin plot to compare them. To find out the number of students that scored a higher score of above 90, we will be using `ggrepel` to find out the number of students that score that.

::: panel-tabset
### Default violin plot by gender and subjects

```{r}
exam_long <- exam_data %>%
  pivot_longer(cols = c(ENGLISH, MATHS, SCIENCE),
               names_to = "Subject",
               values_to = "Score")

ggplot(exam_long, aes(x = Subject, y = Score, fill = Subject)) +
  geom_violin(trim = FALSE, alpha = 0.7) +
  geom_jitter(width = 0.1, alpha = 0.3, size = 1, color = "black") +
  facet_wrap(~GENDER) +
  labs(title = "Score Distribution by Students",
       x = "Subject",
       y = "Score") +
  theme(legend.position = "none") 
```

### Students that scored more than 90 in each subject (using ggrepel)

From the results, it is seen that there are 17 students from each gender that scored more than 90 in Math but there are 5 students and 3 students that scored above 90 for English and Science respectively. It is also shown that there are more female students (4) who scored 90 as compared to male students (only 1) in English and there is more male students (2) that scored more than 90 in Science as compared to female students (only 1).

```{r}
exam_long <- exam_data %>%
  pivot_longer(cols = c(ENGLISH),
               names_to = "Subject",
               values_to = "Score")


highlight_data <- exam_long %>%
  filter(Score > 90)

e2 <- ggplot(exam_long, aes(x = Subject, y = Score, fill = GENDER)) +
  geom_violin(trim = FALSE, alpha = 0.7, position = position_dodge(width = 0.9)) +
  geom_jitter(
    aes(color = GENDER),
    alpha = 0.3,
    size = 1,
    position = position_jitterdodge(jitter.width = 0.15, dodge.width = 0.9)
  )  +

  # Add ggrepel labels for top scorers
  geom_label_repel(
    data = highlight_data,
    aes(label = ID, color = GENDER),
    position = position_jitterdodge(jitter.width = 0.15, dodge.width = 0.9),
    fontface = "bold",
    size = 3,
    box.padding = 0.4,
    label.padding = 0.3,     # Padding inside the box
    label.size = 0.3,        # Thickness of the box border
    fill = "white",          # Background color of the label
    max.overlaps = 60,
    show.legend = FALSE
  ) +
  labs(
    title = "English Scores based on Gender",
    subtitle = "Labels for students who scored above 90",
    x = "Subject",
    y = "Score"
  ) 
e2#
```

```{r}
exam_long <- exam_data %>%
  pivot_longer(cols = c(MATHS),
               names_to = "Subject",
               values_to = "Score")


highlight_data <- exam_long %>%
  filter(Score > 90)

m2 <- ggplot(exam_long, aes(x = Subject, y = Score, fill = GENDER)) +
  geom_violin(trim = FALSE, alpha = 0.7, position = position_dodge(width = 0.9)) +
  geom_jitter(
    aes(color = GENDER),
    alpha = 0.3,
    size = 1,
    position = position_jitterdodge(jitter.width = 0.15, dodge.width = 0.9)
  )  +

  # Add ggrepel labels for top scorers
  geom_label_repel(
    data = highlight_data,
    aes(label = ID, color = GENDER),
    position = position_jitterdodge(jitter.width = 0.15, dodge.width = 0.9),
    fontface = "bold",
    size = 3,
    box.padding = 0.4,
    label.padding = 0.3,     # Padding inside the box
    label.size = 0.3,        # Thickness of the box border
    fill = "white",          # Background color of the label
    max.overlaps = 60,
    show.legend = FALSE
  ) +
  labs(
    title = "Math Scores based on Gender",
    subtitle = "Labels for students who scored above 90",
    x = "Subject",
    y = "Score"
  ) 
m2#
```

```{r}
exam_long <- exam_data %>%
  pivot_longer(cols = c(SCIENCE),
               names_to = "Subject",
               values_to = "Score")


highlight_data <- exam_long %>%
  filter(Score > 90)

s2 <- ggplot(exam_long, aes(x = Subject, y = Score, fill = GENDER)) +
  geom_violin(trim = FALSE, alpha = 0.7, position = position_dodge(width = 0.9)) +
  geom_jitter(
    aes(color = GENDER),
    alpha = 0.3,
    size = 1,
    position = position_jitterdodge(jitter.width = 0.15, dodge.width = 0.9)
  )  +

  # Add ggrepel labels for top scorers
  geom_label_repel(
    data = highlight_data,
    aes(label = ID, color = GENDER),
    position = position_jitterdodge(jitter.width = 0.15, dodge.width = 0.9),
    fontface = "bold",
    size = 3,
    box.padding = 0.4,
    label.padding = 0.3,     # Padding inside the box
    label.size = 0.3,        # Thickness of the box border
    fill = "white",          # Background color of the label
    max.overlaps = 60,
    show.legend = FALSE
  ) +
  labs(
    title = "Science Scores based on Gender",
    subtitle = "Labels for students who scored above 90",
    x = "Subject",
    y = "Score"
  ) 
s2#
```

### Patchwork of students that scored more than 90 in each subject

```{r}
((s2 / e2) |  m2) 
```
:::

## 7.3. Dot Plot

I will be plotting a dot plot to compare the results between the female and male students who scored well (above 80) in English and Math. Based on using the `+ sign patchwork`package, I am able to clearly see the number of students that scored above 80 and based on the figure, it can be observed that Math has more students that scored above 80. The number of dots represent the number of students that scored above 80 for each subject respectively.

::: panel-tabset
### **Default Dot Plots**

```{r}
high_english <- exam_data[exam_data$ENGLISH > 80, ]
e3 <- ggplot(high_english, aes(x = GENDER, y = ENGLISH)) +
  geom_dotplot(
    binaxis = 'y', 
    stackdir = 'center', 
    dotsize = 0.7, 
    binwidth = 1) +
  labs(title = "Students Scoring Above 80",
       x = "Gender",
       y = "English Score") +
  theme_excel()
e3#
```

```{r}
high_math <- exam_data[exam_data$MATHS > 80, ]
m3 <- ggplot(high_math, aes(x = GENDER, y = MATHS)) +
  geom_dotplot(
    binaxis = 'y', 
    stackdir = 'center', 
    dotsize = 0.7, 
    binwidth = 1) +
  labs(title = "Students Scoring Above 80",
       x = "Gender",
       y = "Math Score") +
  theme_excel()
m3#
```

### patchwork (using + sign)

```{r}
e3 + m3
```
:::

## 7.4. Pie Chart and Bar Chart

::: panel-tabset
### Pie Chart: Number of Students based on Gender for English

```{r}

gender_counts <- exam_data %>%
  group_by(GENDER) %>%
  summarise(Count = n())

p1 <- ggplot(gender_counts, aes(x = "", y = Count, fill = GENDER)) +
  geom_bar(stat = "identity", width = 1) +
  coord_polar(theta = "y") +  # This transforms the bar chart to a pie chart
  theme_void() +  # Removes axes and background
  labs(title = "Number of Students in English") +
  theme(
    plot.title = element_text(size = 9),
    plot.background = element_rect(fill = "white")
  )
p1#
```

### Bar Chart: Average English Score by Gender

```{r}
avg_english <- exam_data %>%
  group_by(GENDER) %>%
  summarise(Avg_English = mean(ENGLISH))

# Plot
a1 <- ggplot(avg_english, aes(x = GENDER, y = Avg_English)) +
  geom_bar(stat = "identity") +
  labs(title = "Average English Score by Gender",
       x = "Gender",
       y = "Average Score") +
  theme_excel()
a1#
```

```{r}
avg_maths <- exam_data %>%
  group_by(GENDER) %>%
  summarise(Avg_Maths = mean(MATHS))

# Plot
a2 <- ggplot(avg_maths, aes(x = GENDER, y = Avg_Maths)) +
  geom_bar(stat = "identity") +
  labs(title = "Average Maths Score by Gender",
       x = "Gender",
       y = "Average Score") +
  theme_excel()
a2#
```

```{r}
avg_science <- exam_data %>%
  group_by(GENDER) %>%
  summarise(Avg_Science = mean(SCIENCE))

# Plot
a3 <- ggplot(avg_science, aes(x = GENDER, y = Avg_Science)) +
  geom_bar(stat = "identity") +
  labs(title = "Average Science Score by Gender",
       x = "Gender",
       y = "Average Score") +
  theme_excel()
a3#
```

### Patchwork (using "/","\|","()" to combine 3 plots)

```{r}
a1/a2|a3

```

### Patchwork (using insert): English score by Gender

```{r}


a1 + inset_element(p1, 
                   left = 0.7,    
                   bottom = 0,    
                   right = 1,     
                   top = 0.3)     

```
:::

## 7.5. Raincloud Plot

## 7.6. Diverging Stacked Bar Chart

## 7.7. Packed Bars
